{
    "contractName": "SoritesPriceFuturesProvider",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "initialConsumerAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferRequested",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "asset",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "oracleAddress",
                    "type": "address"
                }
            ],
            "name": "addSupportedAsset",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "chainlinkPriceOracles",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "consumerAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "asset",
                    "type": "string"
                },
                {
                    "internalType": "uint8",
                    "name": "metric",
                    "type": "uint8"
                },
                {
                    "internalType": "uint80",
                    "name": "value",
                    "type": "uint80"
                },
                {
                    "internalType": "uint64",
                    "name": "endTime",
                    "type": "uint64"
                },
                {
                    "internalType": "uint80",
                    "name": "usdcToDeposit",
                    "type": "uint80"
                },
                {
                    "internalType": "bool",
                    "name": "speculatingOnYes",
                    "type": "bool"
                }
            ],
            "name": "createMarketEvent",
            "outputs": [
                {
                    "internalType": "uint80",
                    "name": "",
                    "type": "uint80"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getLabel",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint80",
                    "name": "marketEventId",
                    "type": "uint80"
                }
            ],
            "name": "getMarketEventName",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint80",
                    "name": "marketEventId",
                    "type": "uint80"
                }
            ],
            "name": "getMarketEventNameVariables",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "format",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "text",
                            "type": "string"
                        },
                        {
                            "internalType": "int256",
                            "name": "value",
                            "type": "int256"
                        }
                    ],
                    "internalType": "struct LabelVariable[]",
                    "name": "",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getSupportedAssets",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getSupportedMetrics",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "uint8",
                            "name": "metricId",
                            "type": "uint8"
                        },
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "internalType": "struct FuturesProviderSupportedMetric[]",
                    "name": "",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint80",
                    "name": "marketEventId",
                    "type": "uint80"
                },
                {
                    "internalType": "uint80",
                    "name": "aggregatorRoundId",
                    "type": "uint80"
                }
            ],
            "name": "resolveMarketEvent",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "supportedAssets",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialConsumerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"asset\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"addSupportedAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"chainlinkPriceOracles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consumerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"asset\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"metric\",\"type\":\"uint8\"},{\"internalType\":\"uint80\",\"name\":\"value\",\"type\":\"uint80\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"uint80\",\"name\":\"usdcToDeposit\",\"type\":\"uint80\"},{\"internalType\":\"bool\",\"name\":\"speculatingOnYes\",\"type\":\"bool\"}],\"name\":\"createMarketEvent\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"marketEventId\",\"type\":\"uint80\"}],\"name\":\"getMarketEventName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"marketEventId\",\"type\":\"uint80\"}],\"name\":\"getMarketEventNameVariables\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"format\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"internalType\":\"struct LabelVariable[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedAssets\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedMetrics\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"metricId\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct FuturesProviderSupportedMetric[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"marketEventId\",\"type\":\"uint80\"},{\"internalType\":\"uint80\",\"name\":\"aggregatorRoundId\",\"type\":\"uint80\"}],\"name\":\"resolveMarketEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedAssets\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"createMarketEvent(string,uint8,uint80,uint64,uint80,bool)\":{\"notice\":\"This function is to be used by the public to create a Market Event\"},\"getLabel()\":{\"notice\":\"Provides a human friendly label describing on what this Future Provider enables speculating\"},\"getMarketEventName(uint80)\":{\"notice\":\"Provides a human friendly label for a Market Event  Always available: START_DATE, END_DATE\"},\"getMarketEventNameVariables(uint80)\":{\"notice\":\"Provides substitution variables for Uint256s for the Market Event label  The variables START_DATE and END_DATE are always available\"},\"getSupportedAssets()\":{\"notice\":\"Provides names of the supported assets\"},\"getSupportedMetrics()\":{\"notice\":\"Provides the available metrics and their names and integer IDs\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"resolveMarketEvent(uint80,uint80)\":{\"notice\":\"This function is how the public can request for a marketEvent to be resolved. {aggregatorRoundId} is the Round ID from Chainlink, and it must be such that {aggregatorRoundId} is on/after the endTime but {aggregatorRoundId - 1} is before the endTime. This is to ensure that we use the earliest available round that falls on/after the endTime.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"This contract resolved Sorites marketEvents to Yes or No depending on the price of an asset after a specified time.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/mieszkokycermann/Desktop/contract/contracts/PriceFutures.sol\":\"SoritesPriceFuturesProvider\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mieszkokycermann/Desktop/contract/contracts/PriceFutures.sol\":{\"keccak256\":\"0x75f06cfc8403048e15c453314528d079f3df3eaf178041303a838c6a41ad9c66\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://64b7ee16709c87bb3ec84e2d2d7134a7077e41c0572920c9570f96318b096470\",\"dweb:/ipfs/QmQYZpUg1HjJUXQfpbbc3BH9HDbhQZ5oLHhxob4Dm9QcT1\"]},\"/Users/mieszkokycermann/Desktop/contract/interfaces/IFuturesConsumer.sol\":{\"keccak256\":\"0x9c6947e2293221b9a572d11959e99b8ce7662befca233e1c37f2e96f0d3cfda4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f30ed1869184a43980fd54098cb7d494df461ce8e1362613d0cfbce0cd44ed25\",\"dweb:/ipfs/QmRzHYcaucNCRmTs2XuhprqscKnZzJ2d9rczpGAe9VJ2JQ\"]},\"/Users/mieszkokycermann/Desktop/contract/interfaces/IFuturesProvider.sol\":{\"keccak256\":\"0x86b402ba8d1a791162c2c83bbeb12b1117dcb95fbd6776d64be1084173e71e74\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a49bab01f7dd29b9aa3225aaef8b09574790066ee2cb7c13f58194c38eba1939\",\"dweb:/ipfs/Qme75ZKzusXuRMer9wqUGY3Bv2QhWkaDwKYct5LUNyrEow\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\":{\"keccak256\":\"0x40224641403cb9fa03d4f060296d7420a9ff11b46abadc958ae048459205e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d1dabc1ca292b93c373589b1827f01b404d0d66669f58c03b6d2f92a6e64f2c\",\"dweb:/ipfs/QmP3yzaUfqUqb7qk4fBYw8U6rMgWsSgNKjSUGJncjwaHCq\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]}},\"version\":1}",
    "bytecode": "608060405234801561000f575f80fd5b50604051611b22380380611b2283398101604081905261002e9161018d565b33805f816100835760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b5f80546001600160a01b0319166001600160a01b03848116919091179091558116156100b2576100b2816100e5565b5050600580546001600160a01b039093166001600160a01b031993841681179091556006805490931617909155506101ba565b336001600160a01b0382160361013d5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161007a565b600180546001600160a01b0319166001600160a01b038381169182179092555f8054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b5f6020828403121561019d575f80fd5b81516001600160a01b03811681146101b3575f80fd5b9392505050565b61195b806101c75f395ff3fe608060405234801561000f575f80fd5b50600436106100e5575f3560e01c8063af33a17b11610088578063dbc2d04211610063578063dbc2d0421461022b578063e056de271461023e578063e5406dbf14610251578063f2fde38b14610266575f80fd5b8063af33a17b146101e5578063c68dbb37146101f8578063c6ebd3921461020b575f80fd5b80636f685e75116100c35780636f685e751461017e57806379ba5097146101935780638da5cb5b1461019b5780639554c124146101ab575f80fd5b8063236126b2146100e95780633c0b9ec1146101075780633e18f96014610153575b5f80fd5b6100f1610279565b6040516100fe9190611120565b60405180910390f35b61013b6101153660046111ab565b80516020818301810180516002825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b6101666101613660046112af565b61034d565b6040516001600160501b0390911681526020016100fe565b61019161018c36600461135f565b61064a565b005b610191610846565b5f546001600160a01b031661013b565b6040805180820190915260158152745072696365206f6e2061206675747572652064617960581b60208201525b6040516100fe9190611396565b6101d86101f33660046113af565b6108ef565b6101d86102063660046113ca565b61097a565b61021e6102193660046113af565b610a20565b6040516100fe91906113e1565b60055461013b906001600160a01b031681565b61019161024c36600461147f565b610b54565b610259610ce7565b6040516100fe91906114cf565b610191610274366004611531565b610dbb565b6060806040518060400160405280600160ff16815260200160405180604001604052806012815260200171283934b1b29034b9903632b9b9903a3430b760711b815250815250815f815181106102d1576102d161154a565b60200260200101819052506040518060400160405280600260ff1681526020016040518060400160405280601e81526020017f5072696365206973206d6f7265207468616e206f7220657175616c20746f00008152508152508160018151811061033d5761033d61154a565b6020908102919091010152919050565b5f60ff861660011480610363575060ff86166002145b6103a15760405162461bcd60e51b815260206004820152600a602482015269426164206d657472696360b01b60448201526064015b60405180910390fd5b600388886040516103b392919061155e565b9081526040519081900360200190205460ff166103fe5760405162461bcd60e51b815260206004820152600960248201526810985908185cdcd95d60ba1b6044820152606401610398565b6001856001600160501b031610156104445760405162461bcd60e51b81526020600482015260096024820152684261642076616c756560b81b6044820152606401610398565b6006546040516379addc3960e01b815233600482015267ffffffffffffffff861660248201526001600160501b038516604482015283151560648201525f916001600160a01b0316906379addc39906084016020604051808303815f875af11580156104b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d6919061156d565b6001600160501b0381165f9081526007602052604090205490915060ff161561052c5760405162461bcd60e51b81526020600482015260086024820152674578697374696e6760c01b6044820152606401610398565b6040518060a001604052806001151581526020018a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92018290525093855250505060ff8a166020808401919091526001600160501b038a811660408086019190915267ffffffffffffffff8b1660609095019490945285168252600781529190208251815460ff19169015151781559082015160018201906105d8908261160c565b50604082015160029091018054606084015160809094015167ffffffffffffffff16600160581b0267ffffffffffffffff60581b196001600160501b03909516610100026affffffffffffffffffffff1990921660ff9094169390931717929092161790559050979650505050505050565b6001600160501b0382165f908152600760205260409020805460ff166106825760405162461bcd60e51b8152600401610398906116cc565b5f60028260010160405161069691906116f7565b908152604051908190036020019020546001600160a01b03169050806106ce5760405162461bcd60e51b8152600401610398906116cc565b600282015481905f906106f390600160581b900467ffffffffffffffff168684610dcf565b60028501549091505f9060ff165f1901610725575060028401546001600160501b038083166101009092041610610789565b600285015460ff1660011901610754575060028401546001600160501b03808316610100909204161015610789565b60405162461bcd60e51b815260206004820152600a602482015269426164206d657472696360b01b6044820152606401610398565b600654604051635881f9df60e01b81526001600160501b038916600482015282151560248201526001600160a01b0390911690635881f9df906044015f604051808303815f87803b1580156107dc575f80fd5b505af11580156107ee573d5f803e3d5ffd5b5050506001600160501b0388165f908152600760205260408120805460ff19168155915061081f60018301826110a8565b50600201805472ffffffffffffffffffffffffffffffffffffff1916905550505050505050565b6001546001600160a01b031633146108995760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606401610398565b5f8054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6001600160501b0381165f90815260076020526040902080546060919060ff1661092b5760405162461bcd60e51b8152600401610398906116cc565b600281015460ff165f190161095a576040518060600160405280603381526020016118f3603391399392505050565b6040518060600160405280603181526020016118c2603191399392505050565b60048181548110610989575f80fd5b905f5260205f20015f9150905080546109a190611588565b80601f01602080910402602001604051908101604052809291908181526020018280546109cd90611588565b8015610a185780601f106109ef57610100808354040283529160200191610a18565b820191905f5260205f20905b8154815290600101906020018083116109fb57829003601f168201915b505050505081565b6001600160501b0381165f90815260076020526040902080546060919060ff16610a5c5760405162461bcd60e51b8152600401610398906116cc565b6060604051806060016040528060405180604001604052806006815260200165737472696e6760d01b8152508152602001604051806040016040528060058152602001641054d4d15560da1b81525081526020015f815250815f81518110610ac657610ac661154a565b6020908102919091018101919091526040805160a081018252600460608201908152637573646360e01b6080830152815281518083018352600581526456414c554560d81b8185015292810192909252600284015461010090046001600160501b031690820152815182906001908110610b4257610b4261154a565b60209081029190910101529392505050565b610b5c610fac565b5f6001600160a01b031660028484604051610b7892919061155e565b908152604051908190036020019020546001600160a01b031614610bc75760405162461bcd60e51b815260206004820152600660248201526545786973747360d01b6044820152606401610398565b5f819050806001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c07573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611769565b50600480546001810182555f919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01610c68848683611780565b508160028585604051610c7c92919061155e565b90815260200160405180910390205f6101000a8154816001600160a01b0302191690836001600160a01b03160217905550600160038585604051610cc192919061155e565b908152604051908190036020019020805491151560ff1990921691909117905550505050565b60606004805480602002602001604051908101604052809291908181526020015f905b82821015610db2578382905f5260205f20018054610d2790611588565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5390611588565b8015610d9e5780601f10610d7557610100808354040283529160200191610d9e565b820191905f5260205f20905b815481529060010190602001808311610d8157829003601f168201915b505050505081526020019060010190610d0a565b50505050905090565b610dc3610fac565b610dcc81611000565b50565b604051639a6fc8f560e01b81526001600160501b03831660048201525f90819081906001600160a01b03851690639a6fc8f59060240160a060405180830381865afa158015610e20573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e44919061183a565b509350509250505f846001600160a01b0316639a6fc8f5600188610e68919061188e565b6040516001600160e01b031960e084901b1681526001600160501b03909116600482015260240160a060405180830381865afa158015610eaa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ece919061183a565b509350505050866001600160501b0316821015610f1d5760405162461bcd60e51b815260206004820152600d60248201526c42616420726f756e642028312960981b6044820152606401610398565b866001600160501b03168110610f655760405162461bcd60e51b815260206004820152600d60248201526c42616420726f756e642028322960981b6044820152606401610398565b5f8312610fa15760405162461bcd60e51b815260206004820152600a6024820152692130b21030b739bbb2b960b11b6044820152606401610398565b509095945050505050565b5f546001600160a01b03163314610ffe5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610398565b565b336001600160a01b038216036110585760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610398565b600180546001600160a01b0319166001600160a01b038381169182179092555f8054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b5080546110b490611588565b5f825580601f106110c3575050565b601f0160209004905f5260205f2090810190610dcc91905b808211156110ee575f81556001016110db565b5090565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b8381101561118957888303603f190185528151805160ff168452870151878401879052611176878501826110f2565b9588019593505090860190600101611147565b509098975050505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156111bb575f80fd5b813567ffffffffffffffff808211156111d2575f80fd5b818401915084601f8301126111e5575f80fd5b8135818111156111f7576111f7611197565b604051601f8201601f19908116603f0116810190838211818310171561121f5761121f611197565b81604052828152876020848701011115611237575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f8083601f840112611266575f80fd5b50813567ffffffffffffffff81111561127d575f80fd5b602083019150836020828501011115611294575f80fd5b9250929050565b6001600160501b0381168114610dcc575f80fd5b5f805f805f805f60c0888a0312156112c5575f80fd5b873567ffffffffffffffff808211156112dc575f80fd5b6112e88b838c01611256565b909950975060208a0135915060ff82168214611302575f80fd5b9095506040890135906113148261129b565b909450606089013590808216821461132a575f80fd5b509250608088013561133b8161129b565b915060a0880135801515811461134f575f80fd5b8091505092959891949750929550565b5f8060408385031215611370575f80fd5b823561137b8161129b565b9150602083013561138b8161129b565b809150509250929050565b602081525f6113a860208301846110f2565b9392505050565b5f602082840312156113bf575f80fd5b81356113a88161129b565b5f602082840312156113da575f80fd5b5035919050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b8381101561118957603f1989840301855281516060815181865261142e828701826110f2565b915050888201518582038a87015261144682826110f2565b92890151958901959095525094870194925090860190600101611408565b80356001600160a01b038116811461147a575f80fd5b919050565b5f805f60408486031215611491575f80fd5b833567ffffffffffffffff8111156114a7575f80fd5b6114b386828701611256565b90945092506114c6905060208501611464565b90509250925092565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561152457603f198886030184526115128583516110f2565b945092850192908501906001016114f6565b5092979650505050505050565b5f60208284031215611541575f80fd5b6113a882611464565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b5f6020828403121561157d575f80fd5b81516113a88161129b565b600181811c9082168061159c57607f821691505b6020821081036115ba57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561160757805f5260205f20601f840160051c810160208510156115e55750805b601f840160051c820191505b81811015611604575f81556001016115f1565b50505b505050565b815167ffffffffffffffff81111561162657611626611197565b61163a816116348454611588565b846115c0565b602080601f83116001811461166d575f84156116565750858301515b5f19600386901b1c1916600185901b1785556116c4565b5f85815260208120601f198616915b8281101561169b5788860151825594840194600190910190840161167c565b50858210156116b857878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b602080825260119082015270109859081b585c9ad95d115d995b9d1259607a1b604082015260600190565b5f80835461170481611588565b6001828116801561171c57600181146117315761175d565b60ff198416875282151583028701945061175d565b875f526020805f205f5b858110156117545781548a82015290840190820161173b565b50505082870194505b50929695505050505050565b5f60208284031215611779575f80fd5b5051919050565b67ffffffffffffffff83111561179857611798611197565b6117ac836117a68354611588565b836115c0565b5f601f8411600181146117dd575f85156117c65750838201355b5f19600387901b1c1916600186901b178355611604565b5f83815260208120601f198716915b8281101561180c57868501358255602094850194600190920191016117ec565b5086821015611828575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f805f805f60a0868803121561184e575f80fd5b85516118598161129b565b8095505060208601519350604086015192506060860151915060808601516118808161129b565b809150509295509295909350565b6001600160501b038281168282160390808211156118ba57634e487b7160e01b5f52601160045260245ffd5b509291505056fe5072696365206f662041535345542077696c6c2062652056414c5545206f72206d6f7265206f6e20454e445f444154452e5072696365206f662041535345542077696c6c206265206c657373207468616e2056414c5545206f6e20454e445f444154452ea264697066735822122007aee8a8fd666a4c02bbd24e40eef6cb10526f26c999e57cfb0616eaaaa401d264736f6c63430008190033",
    "deployedBytecode": "608060405234801561000f575f80fd5b50600436106100e5575f3560e01c8063af33a17b11610088578063dbc2d04211610063578063dbc2d0421461022b578063e056de271461023e578063e5406dbf14610251578063f2fde38b14610266575f80fd5b8063af33a17b146101e5578063c68dbb37146101f8578063c6ebd3921461020b575f80fd5b80636f685e75116100c35780636f685e751461017e57806379ba5097146101935780638da5cb5b1461019b5780639554c124146101ab575f80fd5b8063236126b2146100e95780633c0b9ec1146101075780633e18f96014610153575b5f80fd5b6100f1610279565b6040516100fe9190611120565b60405180910390f35b61013b6101153660046111ab565b80516020818301810180516002825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b6101666101613660046112af565b61034d565b6040516001600160501b0390911681526020016100fe565b61019161018c36600461135f565b61064a565b005b610191610846565b5f546001600160a01b031661013b565b6040805180820190915260158152745072696365206f6e2061206675747572652064617960581b60208201525b6040516100fe9190611396565b6101d86101f33660046113af565b6108ef565b6101d86102063660046113ca565b61097a565b61021e6102193660046113af565b610a20565b6040516100fe91906113e1565b60055461013b906001600160a01b031681565b61019161024c36600461147f565b610b54565b610259610ce7565b6040516100fe91906114cf565b610191610274366004611531565b610dbb565b6060806040518060400160405280600160ff16815260200160405180604001604052806012815260200171283934b1b29034b9903632b9b9903a3430b760711b815250815250815f815181106102d1576102d161154a565b60200260200101819052506040518060400160405280600260ff1681526020016040518060400160405280601e81526020017f5072696365206973206d6f7265207468616e206f7220657175616c20746f00008152508152508160018151811061033d5761033d61154a565b6020908102919091010152919050565b5f60ff861660011480610363575060ff86166002145b6103a15760405162461bcd60e51b815260206004820152600a602482015269426164206d657472696360b01b60448201526064015b60405180910390fd5b600388886040516103b392919061155e565b9081526040519081900360200190205460ff166103fe5760405162461bcd60e51b815260206004820152600960248201526810985908185cdcd95d60ba1b6044820152606401610398565b6001856001600160501b031610156104445760405162461bcd60e51b81526020600482015260096024820152684261642076616c756560b81b6044820152606401610398565b6006546040516379addc3960e01b815233600482015267ffffffffffffffff861660248201526001600160501b038516604482015283151560648201525f916001600160a01b0316906379addc39906084016020604051808303815f875af11580156104b2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d6919061156d565b6001600160501b0381165f9081526007602052604090205490915060ff161561052c5760405162461bcd60e51b81526020600482015260086024820152674578697374696e6760c01b6044820152606401610398565b6040518060a001604052806001151581526020018a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92018290525093855250505060ff8a166020808401919091526001600160501b038a811660408086019190915267ffffffffffffffff8b1660609095019490945285168252600781529190208251815460ff19169015151781559082015160018201906105d8908261160c565b50604082015160029091018054606084015160809094015167ffffffffffffffff16600160581b0267ffffffffffffffff60581b196001600160501b03909516610100026affffffffffffffffffffff1990921660ff9094169390931717929092161790559050979650505050505050565b6001600160501b0382165f908152600760205260409020805460ff166106825760405162461bcd60e51b8152600401610398906116cc565b5f60028260010160405161069691906116f7565b908152604051908190036020019020546001600160a01b03169050806106ce5760405162461bcd60e51b8152600401610398906116cc565b600282015481905f906106f390600160581b900467ffffffffffffffff168684610dcf565b60028501549091505f9060ff165f1901610725575060028401546001600160501b038083166101009092041610610789565b600285015460ff1660011901610754575060028401546001600160501b03808316610100909204161015610789565b60405162461bcd60e51b815260206004820152600a602482015269426164206d657472696360b01b6044820152606401610398565b600654604051635881f9df60e01b81526001600160501b038916600482015282151560248201526001600160a01b0390911690635881f9df906044015f604051808303815f87803b1580156107dc575f80fd5b505af11580156107ee573d5f803e3d5ffd5b5050506001600160501b0388165f908152600760205260408120805460ff19168155915061081f60018301826110a8565b50600201805472ffffffffffffffffffffffffffffffffffffff1916905550505050505050565b6001546001600160a01b031633146108995760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606401610398565b5f8054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6001600160501b0381165f90815260076020526040902080546060919060ff1661092b5760405162461bcd60e51b8152600401610398906116cc565b600281015460ff165f190161095a576040518060600160405280603381526020016118f3603391399392505050565b6040518060600160405280603181526020016118c2603191399392505050565b60048181548110610989575f80fd5b905f5260205f20015f9150905080546109a190611588565b80601f01602080910402602001604051908101604052809291908181526020018280546109cd90611588565b8015610a185780601f106109ef57610100808354040283529160200191610a18565b820191905f5260205f20905b8154815290600101906020018083116109fb57829003601f168201915b505050505081565b6001600160501b0381165f90815260076020526040902080546060919060ff16610a5c5760405162461bcd60e51b8152600401610398906116cc565b6060604051806060016040528060405180604001604052806006815260200165737472696e6760d01b8152508152602001604051806040016040528060058152602001641054d4d15560da1b81525081526020015f815250815f81518110610ac657610ac661154a565b6020908102919091018101919091526040805160a081018252600460608201908152637573646360e01b6080830152815281518083018352600581526456414c554560d81b8185015292810192909252600284015461010090046001600160501b031690820152815182906001908110610b4257610b4261154a565b60209081029190910101529392505050565b610b5c610fac565b5f6001600160a01b031660028484604051610b7892919061155e565b908152604051908190036020019020546001600160a01b031614610bc75760405162461bcd60e51b815260206004820152600660248201526545786973747360d01b6044820152606401610398565b5f819050806001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c07573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611769565b50600480546001810182555f919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01610c68848683611780565b508160028585604051610c7c92919061155e565b90815260200160405180910390205f6101000a8154816001600160a01b0302191690836001600160a01b03160217905550600160038585604051610cc192919061155e565b908152604051908190036020019020805491151560ff1990921691909117905550505050565b60606004805480602002602001604051908101604052809291908181526020015f905b82821015610db2578382905f5260205f20018054610d2790611588565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5390611588565b8015610d9e5780601f10610d7557610100808354040283529160200191610d9e565b820191905f5260205f20905b815481529060010190602001808311610d8157829003601f168201915b505050505081526020019060010190610d0a565b50505050905090565b610dc3610fac565b610dcc81611000565b50565b604051639a6fc8f560e01b81526001600160501b03831660048201525f90819081906001600160a01b03851690639a6fc8f59060240160a060405180830381865afa158015610e20573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e44919061183a565b509350509250505f846001600160a01b0316639a6fc8f5600188610e68919061188e565b6040516001600160e01b031960e084901b1681526001600160501b03909116600482015260240160a060405180830381865afa158015610eaa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ece919061183a565b509350505050866001600160501b0316821015610f1d5760405162461bcd60e51b815260206004820152600d60248201526c42616420726f756e642028312960981b6044820152606401610398565b866001600160501b03168110610f655760405162461bcd60e51b815260206004820152600d60248201526c42616420726f756e642028322960981b6044820152606401610398565b5f8312610fa15760405162461bcd60e51b815260206004820152600a6024820152692130b21030b739bbb2b960b11b6044820152606401610398565b509095945050505050565b5f546001600160a01b03163314610ffe5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610398565b565b336001600160a01b038216036110585760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610398565b600180546001600160a01b0319166001600160a01b038381169182179092555f8054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b5080546110b490611588565b5f825580601f106110c3575050565b601f0160209004905f5260205f2090810190610dcc91905b808211156110ee575f81556001016110db565b5090565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b8381101561118957888303603f190185528151805160ff168452870151878401879052611176878501826110f2565b9588019593505090860190600101611147565b509098975050505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156111bb575f80fd5b813567ffffffffffffffff808211156111d2575f80fd5b818401915084601f8301126111e5575f80fd5b8135818111156111f7576111f7611197565b604051601f8201601f19908116603f0116810190838211818310171561121f5761121f611197565b81604052828152876020848701011115611237575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f8083601f840112611266575f80fd5b50813567ffffffffffffffff81111561127d575f80fd5b602083019150836020828501011115611294575f80fd5b9250929050565b6001600160501b0381168114610dcc575f80fd5b5f805f805f805f60c0888a0312156112c5575f80fd5b873567ffffffffffffffff808211156112dc575f80fd5b6112e88b838c01611256565b909950975060208a0135915060ff82168214611302575f80fd5b9095506040890135906113148261129b565b909450606089013590808216821461132a575f80fd5b509250608088013561133b8161129b565b915060a0880135801515811461134f575f80fd5b8091505092959891949750929550565b5f8060408385031215611370575f80fd5b823561137b8161129b565b9150602083013561138b8161129b565b809150509250929050565b602081525f6113a860208301846110f2565b9392505050565b5f602082840312156113bf575f80fd5b81356113a88161129b565b5f602082840312156113da575f80fd5b5035919050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b8381101561118957603f1989840301855281516060815181865261142e828701826110f2565b915050888201518582038a87015261144682826110f2565b92890151958901959095525094870194925090860190600101611408565b80356001600160a01b038116811461147a575f80fd5b919050565b5f805f60408486031215611491575f80fd5b833567ffffffffffffffff8111156114a7575f80fd5b6114b386828701611256565b90945092506114c6905060208501611464565b90509250925092565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561152457603f198886030184526115128583516110f2565b945092850192908501906001016114f6565b5092979650505050505050565b5f60208284031215611541575f80fd5b6113a882611464565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b5f6020828403121561157d575f80fd5b81516113a88161129b565b600181811c9082168061159c57607f821691505b6020821081036115ba57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561160757805f5260205f20601f840160051c810160208510156115e55750805b601f840160051c820191505b81811015611604575f81556001016115f1565b50505b505050565b815167ffffffffffffffff81111561162657611626611197565b61163a816116348454611588565b846115c0565b602080601f83116001811461166d575f84156116565750858301515b5f19600386901b1c1916600185901b1785556116c4565b5f85815260208120601f198616915b8281101561169b5788860151825594840194600190910190840161167c565b50858210156116b857878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b602080825260119082015270109859081b585c9ad95d115d995b9d1259607a1b604082015260600190565b5f80835461170481611588565b6001828116801561171c57600181146117315761175d565b60ff198416875282151583028701945061175d565b875f526020805f205f5b858110156117545781548a82015290840190820161173b565b50505082870194505b50929695505050505050565b5f60208284031215611779575f80fd5b5051919050565b67ffffffffffffffff83111561179857611798611197565b6117ac836117a68354611588565b836115c0565b5f601f8411600181146117dd575f85156117c65750838201355b5f19600387901b1c1916600186901b178355611604565b5f83815260208120601f198716915b8281101561180c57868501358255602094850194600190920191016117ec565b5086821015611828575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f805f805f60a0868803121561184e575f80fd5b85516118598161129b565b8095505060208601519350604086015192506060860151915060808601516118808161129b565b809150509295509295909350565b6001600160501b038281168282160390808211156118ba57634e487b7160e01b5f52601160045260245ffd5b509291505056fe5072696365206f662041535345542077696c6c2062652056414c5545206f72206d6f7265206f6e20454e445f444154452e5072696365206f662041535345542077696c6c206265206c657373207468616e2056414c5545206f6e20454e445f444154452ea264697066735822122007aee8a8fd666a4c02bbd24e40eef6cb10526f26c999e57cfb0616eaaaa401d264736f6c63430008190033",
    "sourceMap": "1129:5640:0:-:0;;;6588:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6647:10;;373:1:8;6647:10:0;590:59:9;;;;-1:-1:-1;;;590:59:9;;511:2:14;590:59:9;;;493:21:14;550:2;530:18;;;523:30;589:26;569:18;;;562:54;633:18;;590:59:9;;;;;;;;;656:7;:18;;-1:-1:-1;;;;;;656:18:9;-1:-1:-1;;;;;656:18:9;;;;;;;;;;684:26;;;680:79;;720:32;739:12;720:18;:32::i;:::-;-1:-1:-1;;6665:15:0::1;:40:::0;;-1:-1:-1;;;;;6665:40:0;;::::1;-1:-1:-1::0;;;;;;6665:40:0;;::::1;::::0;::::1;::::0;;;6711:8:::1;:51:::0;;;;::::1;;::::0;;;-1:-1:-1;1129:5640:0;;1536:239:9;1655:10;-1:-1:-1;;;;;1649:16:9;;;1641:52;;;;-1:-1:-1;;;1641:52:9;;864:2:14;1641:52:9;;;846:21:14;903:2;883:18;;;876:30;942:25;922:18;;;915:53;985:18;;1641:52:9;662:347:14;1641:52:9;1700:14;:19;;-1:-1:-1;;;;;;1700:19:9;-1:-1:-1;;;;;1700:19:9;;;;;;;;;-1:-1:-1;1758:7:9;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:9;1536:239;:::o;14:290:14:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:14;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:14:o;662:347::-;1129:5640:0;;;;;;",
    "deployedSourceMap": "1129:5640:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5319:447;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:56;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1337:56:0;;;;;;-1:-1:-1;;;;;2618:32:14;;;2600:51;;2588:2;2573:18;1337:56:0;2454:203:14;2163:719:0;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4523:35:14;;;4505:54;;4493:2;4478:18;2163:719:0;4361:204:14;3265:1050:0;;;;;;:::i;:::-;;:::i;:::-;;1026:316:9;;;:::i;1382:81::-;1429:7;1451;-1:-1:-1;;;;;1451:7:9;1382:81;;5113:97:0;5175:30;;;;;;;;;;;;-1:-1:-1;;;5175:30:0;;;;5113:97;;;;;;;:::i;5770:383::-;;;;;;:::i;:::-;;:::i;1452:31::-;;;;;;:::i;:::-;;:::i;6157:411::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1969:30::-;;;;;-1:-1:-1;;;;;1969:30:0;;;1488:454;;;;;;:::i;:::-;;:::i;5214:101::-;;;:::i;:::-;;;;;;;:::i;847:98:9:-;;;;;;:::i;:::-;;:::i;5319:447:0:-;5371:39;5418:62;5515:76;;;;;;;;840:1;5515:76;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5515:76:0;;;;;;5487:22;5510:1;5487:25;;;;;;;;:::i;:::-;;;;;;:104;;;;5625:100;;;;;;;;895:1;5625:100;;;;;;;;;;;;;;;;;;;;;;;;;;5597:22;5620:1;5597:25;;;;;;;;:::i;:::-;;;;;;;;;;:128;5739:22;5319:447;-1:-1:-1;5319:447:0:o;2163:719::-;2346:6;2368:32;;;840:1;2368:32;;:80;;-1:-1:-1;2404:44:0;;;895:1;2404:44;2368:80;2360:103;;;;-1:-1:-1;;;2360:103:0;;8900:2:14;2360:103:0;;;8882:21:14;8939:2;8919:18;;;8912:30;-1:-1:-1;;;8958:18:14;;;8951:40;9008:18;;2360:103:0;;;;;;;;;2477:18;2496:5;;2477:25;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2469:47;;;;-1:-1:-1;;;2469:47:0;;9517:2:14;2469:47:0;;;9499:21:14;9556:1;9536:18;;;9529:29;-1:-1:-1;;;9574:18:14;;;9567:39;9623:18;;2469:47:0;9315:332:14;2469:47:0;2539:1;2530:5;-1:-1:-1;;;;;2530:10:0;;;2522:32;;;;-1:-1:-1;;;2522:32:0;;9854:2:14;2522:32:0;;;9836:21:14;9893:1;9873:18;;;9866:29;-1:-1:-1;;;9911:18:14;;;9904:39;9960:18;;2522:32:0;9652:332:14;2522:32:0;2584:8;;:80;;-1:-1:-1;;;2584:80:0;;2611:10;2584:80;;;10210:51:14;10309:18;10297:31;;10277:18;;;10270:59;-1:-1:-1;;;;;10365:35:14;;10345:18;;;10338:63;10444:14;;10437:22;10417:18;;;10410:50;2561:20:0;;-1:-1:-1;;;;;2584:8:0;;:26;;10182:19:14;;2584:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2733:22:0;;;;;;:7;:22;;;;;:29;2561:103;;-1:-1:-1;2733:29:0;;2732:30;2724:51;;;;-1:-1:-1;;;2724:51:0;;10927:2:14;2724:51:0;;;10909:21:14;10966:1;10946:18;;;10939:29;-1:-1:-1;;;10984:18:14;;;10977:38;11032:18;;2724:51:0;10725:331:14;2724:51:0;2807:43;;;;;;;;2814:4;2807:43;;;;;;2820:5;;2807:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2807:43:0;;;-1:-1:-1;;;2807:43:0;;;;;;;;;;;-1:-1:-1;;;;;2807:43:0;;;;;;;;;;;;;;;;;;;;;;2782:22;;;;:7;:22;;;;;:68;;;;-1:-1:-1;;2782:68:0;;;;;;;;;;;-1:-1:-1;2782:68:0;;;;;;;:::i;:::-;-1:-1:-1;2782:68:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2782:68:0;-1:-1:-1;;;;;;;;;2782:68:0;;;;;-1:-1:-1;;2782:68:0;;;;;;;;;;;;;;;;;;;2864:13;-1:-1:-1;2163:719:0;;;;;;;;;:::o;3265:1050::-;-1:-1:-1;;;;;3378:22:0;;3354:21;3378:22;;;:7;:22;;;;;3440:13;;;;3432:43;;;;-1:-1:-1;;;3432:43:0;;;;;;;:::i;:::-;3482:21;3506;3528:6;:12;;3506:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3506:35:0;;-1:-1:-1;3506:35:0;3548:57;;;;-1:-1:-1;;;3548:57:0;;;;;;;:::i;:::-;3727:14;;;;3669:13;;3612:32;;3706:84;;-1:-1:-1;;;3727:14:0;;;;3749:17;3669:13;3706;:84::i;:::-;3826:13;;;;3690:100;;-1:-1:-1;3797:18:0;;3826:39;:13;-1:-1:-1;;3826:39:0;3822:254;;-1:-1:-1;3891:12:0;;;;-1:-1:-1;;;;;3891:21:0;;;:12;;;;;:21;3822:254;;;895:1;3929:13;;;:51;:13;-1:-1:-1;;3929:51:0;3925:151;;-1:-1:-1;4006:12:0;;;;-1:-1:-1;;;;;4006:22:0;;;:12;;;;;:22;;3925:151;;;4049:20;;-1:-1:-1;;;4049:20:0;;8900:2:14;4049:20:0;;;8882:21:14;8939:2;8919:18;;;8912:30;-1:-1:-1;;;8958:18:14;;;8951:40;9008:18;;4049:20:0;8698:334:14;3925:151:0;4114:8;;:57;;-1:-1:-1;;;4114:57:0;;-1:-1:-1;;;;;14994:35:14;;4114:57:0;;;14976:54:14;15073:14;;15066:22;15046:18;;;15039:50;-1:-1:-1;;;;;4114:8:0;;;;:27;;14949:18:14;;4114:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;4288:22:0;;;;;;:7;:22;;;;;4281:29;;-1:-1:-1;;4281:29:0;;;4288:22;-1:-1:-1;4281:29:0;;;;4288:22;4281:29;:::i;:::-;-1:-1:-1;4281:29:0;;;;-1:-1:-1;;4281:29:0;;;-1:-1:-1;;;;;;;3265:1050:0:o;1026:316:9:-;1150:14;;-1:-1:-1;;;;;1150:14:9;1136:10;:28;1128:63;;;;-1:-1:-1;;;1128:63:9;;15302:2:14;1128:63:9;;;15284:21:14;15341:2;15321:18;;;15314:30;-1:-1:-1;;;15360:18:14;;;15353:52;15422:18;;1128:63:9;15100:346:14;1128:63:9;1198:16;1217:7;;1240:10;-1:-1:-1;;;;;;1230:20:9;;;;;;;-1:-1:-1;1256:27:9;;;;;;;1295:42;;-1:-1:-1;;;;;1217:7:9;;;;1240:10;;1217:7;;1295:42;;;1071:271;1026:316::o;5770:383:0:-;-1:-1:-1;;;;;5886:22:0;;5862:21;5886:22;;;:7;:22;;;;;5922:13;;5841;;5886:22;5922:13;;5914:43;;;;-1:-1:-1;;;5914:43:0;;;;;;;:::i;:::-;5968:13;;;;:39;:13;-1:-1:-1;;5968:39:0;5964:120;;6017:60;;;;;;;;;;;;;;;;;;5770:383;-1:-1:-1;;;5770:383:0:o;5964:120::-;6090:58;;;;;;;;;;;;;;;;;;5770:383;-1:-1:-1;;;5770:383:0:o;1452:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6157:411::-;-1:-1:-1;;;;;6291:22:0;;6267:21;6291:22;;;:7;:22;;;;;6327:13;;6237:22;;6291;6327:13;;6319:43;;;;-1:-1:-1;;;6319:43:0;;;;;;;:::i;:::-;6369:32;6423:35;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6423:35:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6423:35:0;;;;;;;6456:1;6423:35;;;6408:9;6418:1;6408:12;;;;;;;;:::i;:::-;;;;;;;;;;;:50;;;;6479:61;;;;;;;;;;;;;;;-1:-1:-1;;;6479:61:0;;;;;;;;;;;;;;;;-1:-1:-1;;;6479:61:0;;;;-1:-1:-1;;;6479:61:0;;;;6525:12;;;;;;;-1:-1:-1;;;;;6525:12:0;-1:-1:-1;;;6479:61:0;6464:12;;;;6525;;6464;;;;;;:::i;:::-;;;;;;;;;;:76;6554:9;6157:411;-1:-1:-1;;;6157:411:0:o;1488:454::-;2075:20:9;:18;:20::i;:::-;1632:1:0::1;-1:-1:-1::0;;;;;1592:42:0::1;:21;1614:5;;1592:28;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;1592:28:0::1;:42;1584:61;;;::::0;-1:-1:-1;;;1584:61:0;;15653:2:14;1584:61:0::1;::::0;::::1;15635:21:14::0;15692:1;15672:18;;;15665:29;-1:-1:-1;;;15710:18:14;;;15703:36;15756:18;;1584:61:0::1;15451:329:14::0;1584:61:0::1;1718:32;1775:13;1718:71;;1795:10;-1:-1:-1::0;;;;;1795:18:0::1;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1822:15:0::1;:27:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1822:27:0;;;;;::::1;;1843:5:::0;;1822:27;::::1;:::i;:::-;;1886:13;1855:21;1877:5;;1855:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;:44;;;;;-1:-1:-1::0;;;;;1855:44:0::1;;;;;-1:-1:-1::0;;;;;1855:44:0::1;;;;;;1933:4;1905:18;1924:5;;1905:25;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:32;;;::::1;;-1:-1:-1::0;;1905:32:0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;1488:454:0:o;5214:101::-;5265:15;5295;5288:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5214:101;:::o;847:98:9:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;4319:763:0:-;4551:42;;-1:-1:-1;;;4551:42:0;;-1:-1:-1;;;;;4523:35:14;;4551:42:0;;;4505:54:14;4440:6:0;;;;;;-1:-1:-1;;;;;4551:23:0;;;;;4478:18:14;;4551:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4512:81;;;;;;;4603:25;4633:10;-1:-1:-1;;;;;4633:23:0;;4677:1;4657:17;:21;;;;:::i;:::-;4633:46;;-1:-1:-1;;;;;;4633:46:0;;;;;;;-1:-1:-1;;;;;4523:35:14;;;4633:46:0;;;4505:54:14;4478:18;;4633:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4599:80;;;;;;4759:7;-1:-1:-1;;;;;4746:20:0;:9;:20;;4738:46;;;;-1:-1:-1;;;4738:46:0;;18238:2:14;4738:46:0;;;18220:21:14;18277:2;18257:18;;;18250:30;-1:-1:-1;;;18296:18:14;;;18289:43;18349:18;;4738:46:0;18036:337:14;4738:46:0;4873:7;-1:-1:-1;;;;;4853:27:0;:17;:27;4845:53;;;;-1:-1:-1;;;4845:53:0;;18580:2:14;4845:53:0;;;18562:21:14;18619:2;18599:18;;;18592:30;-1:-1:-1;;;18638:18:14;;;18631:43;18691:18;;4845:53:0;18378:337:14;4845:53:0;5024:1;5015:6;:10;5007:33;;;;-1:-1:-1;;;5007:33:0;;18922:2:14;5007:33:0;;;18904:21:14;18961:2;18941:18;;;18934:30;-1:-1:-1;;;18980:18:14;;;18973:40;19030:18;;5007:33:0;18720:334:14;5007:33:0;-1:-1:-1;5069:6:0;;4319:763;-1:-1:-1;;;;;4319:763:0:o;1809:162:9:-;1932:7;;-1:-1:-1;;;;;1932:7:9;1918:10;:21;1910:56;;;;-1:-1:-1;;;1910:56:9;;19261:2:14;1910:56:9;;;19243:21:14;19300:2;19280:18;;;19273:30;-1:-1:-1;;;19319:18:14;;;19312:52;19381:18;;1910:56:9;19059:346:14;1910:56:9;1809:162::o;1536:239::-;1655:10;-1:-1:-1;;;;;1649:16:9;;;1641:52;;;;-1:-1:-1;;;1641:52:9;;19612:2:14;1641:52:9;;;19594:21:14;19651:2;19631:18;;;19624:30;19690:25;19670:18;;;19663:53;19733:18;;1641:52:9;19410:347:14;1641:52:9;1700:14;:19;;-1:-1:-1;;;;;;1700:19:9;-1:-1:-1;;;;;1700:19:9;;;;;;;;;-1:-1:-1;1758:7:9;;1731:39;;1700:19;;1758:7;;1731:39;;-1:-1:-1;1731:39:9;1536:239;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:289:14:-;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:1082::-;544:4;573:2;613;602:9;598:18;643:2;632:9;625:21;666:6;701;695:13;732:6;724;717:22;758:2;748:12;;791:2;780:9;776:18;769:25;;853:2;843:6;840:1;836:14;825:9;821:30;817:39;891:2;883:6;879:15;912:1;922:439;936:6;933:1;930:13;922:439;;;1001:22;;;-1:-1:-1;;997:36:14;985:49;;1057:13;;1102:9;;1113:4;1098:20;1083:36;;1158:11;;1152:18;1190:15;;;1183:27;;;1233:48;1265:15;;;1152:18;1233:48;:::i;:::-;1339:12;;;;1223:58;-1:-1:-1;;1304:15:14;;;;958:1;951:9;922:439;;;-1:-1:-1;1378:6:14;;308:1082;-1:-1:-1;;;;;;;;308:1082:14:o;1395:127::-;1456:10;1451:3;1447:20;1444:1;1437:31;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1527:922;1596:6;1649:2;1637:9;1628:7;1624:23;1620:32;1617:52;;;1665:1;1662;1655:12;1617:52;1705:9;1692:23;1734:18;1775:2;1767:6;1764:14;1761:34;;;1791:1;1788;1781:12;1761:34;1829:6;1818:9;1814:22;1804:32;;1874:7;1867:4;1863:2;1859:13;1855:27;1845:55;;1896:1;1893;1886:12;1845:55;1932:2;1919:16;1954:2;1950;1947:10;1944:36;;;1960:18;;:::i;:::-;2035:2;2029:9;2003:2;2089:13;;-1:-1:-1;;2085:22:14;;;2109:2;2081:31;2077:40;2065:53;;;2133:18;;;2153:22;;;2130:46;2127:72;;;2179:18;;:::i;:::-;2219:10;2215:2;2208:22;2254:2;2246:6;2239:18;2294:7;2289:2;2284;2280;2276:11;2272:20;2269:33;2266:53;;;2315:1;2312;2305:12;2266:53;2371:2;2366;2362;2358:11;2353:2;2345:6;2341:15;2328:46;2416:1;2394:15;;;2411:2;2390:24;2383:35;;;;-1:-1:-1;2398:6:14;1527:922;-1:-1:-1;;;;;1527:922:14:o;2662:348::-;2714:8;2724:6;2778:3;2771:4;2763:6;2759:17;2755:27;2745:55;;2796:1;2793;2786:12;2745:55;-1:-1:-1;2819:20:14;;2862:18;2851:30;;2848:50;;;2894:1;2891;2884:12;2848:50;2931:4;2923:6;2919:17;2907:29;;2983:3;2976:4;2967:6;2959;2955:19;2951:30;2948:39;2945:59;;;3000:1;2997;2990:12;2945:59;2662:348;;;;;:::o;3015:133::-;-1:-1:-1;;;;;3093:5:14;3089:34;3082:5;3079:45;3069:73;;3138:1;3135;3128:12;3153:1203;3261:6;3269;3277;3285;3293;3301;3309;3362:3;3350:9;3341:7;3337:23;3333:33;3330:53;;;3379:1;3376;3369:12;3330:53;3419:9;3406:23;3448:18;3489:2;3481:6;3478:14;3475:34;;;3505:1;3502;3495:12;3475:34;3544:59;3595:7;3586:6;3575:9;3571:22;3544:59;:::i;:::-;3622:8;;-1:-1:-1;3518:85:14;-1:-1:-1;3707:2:14;3692:18;;3679:32;;-1:-1:-1;3751:4:14;3740:16;;3730:27;;3720:55;;3771:1;3768;3761:12;3720:55;3794:5;;-1:-1:-1;3851:2:14;3836:18;;3823:32;;3864;3823;3864;:::i;:::-;3915:7;;-1:-1:-1;3974:2:14;3959:18;;3946:32;;4009:16;;;3997:29;;3987:57;;4040:1;4037;4030:12;3987:57;-1:-1:-1;4063:7:14;-1:-1:-1;4122:3:14;4107:19;;4094:33;4136:32;4094:33;4136:32;:::i;:::-;4187:7;-1:-1:-1;4246:3:14;4231:19;;4218:33;4289:15;;4282:23;4270:36;;4260:64;;4320:1;4317;4310:12;4260:64;4343:7;4333:17;;;3153:1203;;;;;;;;;;:::o;4570:384::-;4636:6;4644;4697:2;4685:9;4676:7;4672:23;4668:32;4665:52;;;4713:1;4710;4703:12;4665:52;4752:9;4739:23;4771:30;4795:5;4771:30;:::i;:::-;4820:5;-1:-1:-1;4877:2:14;4862:18;;4849:32;4890;4849;4890;:::i;:::-;4941:7;4931:17;;;4570:384;;;;;:::o;4959:220::-;5108:2;5097:9;5090:21;5071:4;5128:45;5169:2;5158:9;5154:18;5146:6;5128:45;:::i;:::-;5120:53;4959:220;-1:-1:-1;;;4959:220:14:o;5184:245::-;5242:6;5295:2;5283:9;5274:7;5270:23;5266:32;5263:52;;;5311:1;5308;5301:12;5263:52;5350:9;5337:23;5369:30;5393:5;5369:30;:::i;5434:180::-;5493:6;5546:2;5534:9;5525:7;5521:23;5517:32;5514:52;;;5562:1;5559;5552:12;5514:52;-1:-1:-1;5585:23:14;;5434:180;-1:-1:-1;5434:180:14:o;5619:1275::-;5821:4;5850:2;5890;5879:9;5875:18;5920:2;5909:9;5902:21;5943:6;5978;5972:13;6009:6;6001;5994:22;6035:2;6025:12;;6068:2;6057:9;6053:18;6046:25;;6130:2;6120:6;6117:1;6113:14;6102:9;6098:30;6094:39;6168:2;6160:6;6156:15;6189:1;6199:666;6213:6;6210:1;6207:13;6199:666;;;6306:2;6302:7;6290:9;6282:6;6278:22;6274:36;6269:3;6262:49;6340:6;6334:13;6370:4;6413:2;6407:9;6444:2;6436:6;6429:18;6474:48;6518:2;6510:6;6506:15;6492:12;6474:48;:::i;:::-;6460:62;;;6571:2;6567;6563:11;6557:18;6624:6;6616;6612:19;6607:2;6599:6;6595:15;6588:44;6659:41;6693:6;6677:14;6659:41;:::i;:::-;6743:11;;;6737:18;6720:15;;;6713:43;;;;-1:-1:-1;6843:12:14;;;;6645:55;-1:-1:-1;6808:15:14;;;;6235:1;6228:9;6199:666;;6899:173;6967:20;;-1:-1:-1;;;;;7016:31:14;;7006:42;;6996:70;;7062:1;7059;7052:12;6996:70;6899:173;;;:::o;7077:485::-;7157:6;7165;7173;7226:2;7214:9;7205:7;7201:23;7197:32;7194:52;;;7242:1;7239;7232:12;7194:52;7282:9;7269:23;7315:18;7307:6;7304:30;7301:50;;;7347:1;7344;7337:12;7301:50;7386:59;7437:7;7428:6;7417:9;7413:22;7386:59;:::i;:::-;7464:8;;-1:-1:-1;7360:85:14;-1:-1:-1;7518:38:14;;-1:-1:-1;7552:2:14;7537:18;;7518:38;:::i;:::-;7508:48;;7077:485;;;;;:::o;7567:803::-;7729:4;7758:2;7798;7787:9;7783:18;7828:2;7817:9;7810:21;7851:6;7886;7880:13;7917:6;7909;7902:22;7955:2;7944:9;7940:18;7933:25;;8017:2;8007:6;8004:1;8000:14;7989:9;7985:30;7981:39;7967:53;;8055:2;8047:6;8043:15;8076:1;8086:255;8100:6;8097:1;8094:13;8086:255;;;8193:2;8189:7;8177:9;8169:6;8165:22;8161:36;8156:3;8149:49;8221:40;8254:6;8245;8239:13;8221:40;:::i;:::-;8211:50;-1:-1:-1;8319:12:14;;;;8284:15;;;;8122:1;8115:9;8086:255;;;-1:-1:-1;8358:6:14;;7567:803;-1:-1:-1;;;;;;;7567:803:14:o;8375:186::-;8434:6;8487:2;8475:9;8466:7;8462:23;8458:32;8455:52;;;8503:1;8500;8493:12;8455:52;8526:29;8545:9;8526:29;:::i;8566:127::-;8627:10;8622:3;8618:20;8615:1;8608:31;8658:4;8655:1;8648:15;8682:4;8679:1;8672:15;9037:273;9222:6;9214;9209:3;9196:33;9178:3;9248:16;;9273:13;;;9248:16;9037:273;-1:-1:-1;9037:273:14:o;10471:249::-;10540:6;10593:2;10581:9;10572:7;10568:23;10564:32;10561:52;;;10609:1;10606;10599:12;10561:52;10641:9;10635:16;10660:30;10684:5;10660:30;:::i;11061:380::-;11140:1;11136:12;;;;11183;;;11204:61;;11258:4;11250:6;11246:17;11236:27;;11204:61;11311:2;11303:6;11300:14;11280:18;11277:38;11274:161;;11357:10;11352:3;11348:20;11345:1;11338:31;11392:4;11389:1;11382:15;11420:4;11417:1;11410:15;11274:161;;11061:380;;;:::o;11572:518::-;11674:2;11669:3;11666:11;11663:421;;;11710:5;11707:1;11700:16;11754:4;11751:1;11741:18;11824:2;11812:10;11808:19;11805:1;11801:27;11795:4;11791:38;11860:4;11848:10;11845:20;11842:47;;;-1:-1:-1;11883:4:14;11842:47;11938:2;11933:3;11929:12;11926:1;11922:20;11916:4;11912:31;11902:41;;11993:81;12011:2;12004:5;12001:13;11993:81;;;12070:1;12056:16;;12037:1;12026:13;11993:81;;;11997:3;;11663:421;11572:518;;;:::o;12266:1345::-;12392:3;12386:10;12419:18;12411:6;12408:30;12405:56;;;12441:18;;:::i;:::-;12470:97;12560:6;12520:38;12552:4;12546:11;12520:38;:::i;:::-;12514:4;12470:97;:::i;:::-;12622:4;;12679:2;12668:14;;12696:1;12691:663;;;;13398:1;13415:6;13412:89;;;-1:-1:-1;13467:19:14;;;13461:26;13412:89;-1:-1:-1;;12223:1:14;12219:11;;;12215:24;12211:29;12201:40;12247:1;12243:11;;;12198:57;13514:81;;12661:944;;12691:663;11519:1;11512:14;;;11556:4;11543:18;;-1:-1:-1;;12727:20:14;;;12845:236;12859:7;12856:1;12853:14;12845:236;;;12948:19;;;12942:26;12927:42;;13040:27;;;;13008:1;12996:14;;;;12875:19;;12845:236;;;12849:3;13109:6;13100:7;13097:19;13094:201;;;13170:19;;;13164:26;-1:-1:-1;;13253:1:14;13249:14;;;13265:3;13245:24;13241:37;13237:42;13222:58;13207:74;;13094:201;;;13341:1;13332:6;13329:1;13325:14;13321:22;13315:4;13308:36;12661:944;;;;;12266:1345;;:::o;13616:341::-;13818:2;13800:21;;;13857:2;13837:18;;;13830:30;-1:-1:-1;;;13891:2:14;13876:18;;13869:47;13948:2;13933:18;;13616:341::o;13962:843::-;14090:3;14119:1;14152:6;14146:13;14182:36;14208:9;14182:36;:::i;:::-;14237:1;14254:17;;;14280:133;;;;14427:1;14422:358;;;;14247:533;;14280:133;-1:-1:-1;;14313:24:14;;14301:37;;14386:14;;14379:22;14367:35;;14358:45;;;-1:-1:-1;14280:133:14;;14422:358;14453:6;14450:1;14443:17;14483:4;14528;14525:1;14515:18;14555:1;14569:165;14583:6;14580:1;14577:13;14569:165;;;14661:14;;14648:11;;;14641:35;14704:16;;;;14598:10;;14569:165;;;14573:3;;;14763:6;14758:3;14754:16;14747:23;;14247:533;-1:-1:-1;14796:3:14;;13962:843;-1:-1:-1;;;;;;13962:843:14:o;15785:184::-;15855:6;15908:2;15896:9;15887:7;15883:23;15879:32;15876:52;;;15924:1;15921;15914:12;15876:52;-1:-1:-1;15947:16:14;;15785:184;-1:-1:-1;15785:184:14:o;15974:1198::-;16098:18;16093:3;16090:27;16087:53;;;16120:18;;:::i;:::-;16149:94;16239:3;16199:38;16231:4;16225:11;16199:38;:::i;:::-;16193:4;16149:94;:::i;:::-;16269:1;16294:2;16289:3;16286:11;16311:1;16306:608;;;;16958:1;16975:3;16972:93;;;-1:-1:-1;17031:19:14;;;17018:33;16972:93;-1:-1:-1;;12223:1:14;12219:11;;;12215:24;12211:29;12201:40;12247:1;12243:11;;;12198:57;17078:78;;16279:887;;16306:608;11519:1;11512:14;;;11556:4;11543:18;;-1:-1:-1;;16342:17:14;;;16457:229;16471:7;16468:1;16465:14;16457:229;;;16560:19;;;16547:33;16532:49;;16667:4;16652:20;;;;16620:1;16608:14;;;;16487:12;16457:229;;;16461:3;16714;16705:7;16702:16;16699:159;;;16838:1;16834:6;16828:3;16822;16819:1;16815:11;16811:21;16807:34;16803:39;16790:9;16785:3;16781:19;16768:33;16764:79;16756:6;16749:95;16699:159;;;16901:1;16895:3;16892:1;16888:11;16884:19;16878:4;16871:33;16279:887;;15974:1198;;;:::o;17177:565::-;17280:6;17288;17296;17304;17312;17365:3;17353:9;17344:7;17340:23;17336:33;17333:53;;;17382:1;17379;17372:12;17333:53;17414:9;17408:16;17433:30;17457:5;17433:30;:::i;:::-;17482:5;17472:15;;;17527:2;17516:9;17512:18;17506:25;17496:35;;17571:2;17560:9;17556:18;17550:25;17540:35;;17615:2;17604:9;17600:18;17594:25;17584:35;;17664:3;17653:9;17649:19;17643:26;17678:32;17702:7;17678:32;:::i;:::-;17729:7;17719:17;;;17177:565;;;;;;;;:::o;17747:284::-;-1:-1:-1;;;;;17870:10:14;;;17858;;;17854:27;;17893:12;;;17890:135;;;17947:10;17942:3;17938:20;17935:1;17928:31;17982:4;17979:1;17972:15;18010:4;18007:1;18000:15;17890:135;;17747:284;;;;:::o",
    "sourcePath": "/Users/mieszkokycermann/Desktop/contract/contracts/PriceFutures.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.25+commit.b61c2a91"
    },
    "ast": {
        "absolutePath": "/Users/mieszkokycermann/Desktop/contract/contracts/PriceFutures.sol",
        "exportedSymbols": {
            "AggregatorV3Interface": [
                1605
            ],
            "ConfirmedOwner": [
                1396
            ],
            "FunctionsClient": [
                706
            ],
            "FunctionsRequest": [
                1317
            ],
            "Future": [
                28
            ],
            "FuturesProviderSupportedMetric": [
                539
            ],
            "IFuturesConsumer": [
                532
            ],
            "IFuturesProvider": [
                588
            ],
            "LabelVariable": [
                547
            ],
            "METRIC_PRICE_LESS_THAN": [
                14
            ],
            "METRIC_PRICE_MORE_THAN_OR_EQUAL_TO": [
                17
            ],
            "SoritesPriceFuturesProvider": [
                506
            ]
        },
        "id": 507,
        "license": "UNLICENSED",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "0.8",
                    ".25"
                ],
                "nodeType": "PragmaDirective",
                "src": "39:23:0"
            },
            {
                "absolutePath": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol",
                "file": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 507,
                "sourceUnit": 707,
                "src": "64:155:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2,
                            "name": "FunctionsClient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "73:15:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
                "file": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 507,
                "sourceUnit": 1397,
                "src": "220:150:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 4,
                            "name": "ConfirmedOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1396,
                            "src": "229:14:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol",
                "file": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol",
                "id": 7,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 507,
                "sourceUnit": 1318,
                "src": "371:167:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 6,
                            "name": "FunctionsRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1317,
                            "src": "380:16:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
                "file": "/Users/mieszkokycermann/Desktop/contract/node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
                "id": 9,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 507,
                "sourceUnit": 1606,
                "src": "539:168:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 8,
                            "name": "AggregatorV3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1605,
                            "src": "548:21:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/mieszkokycermann/Desktop/contract/interfaces/IFuturesConsumer.sol",
                "file": "../interfaces/IFuturesConsumer.sol",
                "id": 10,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 507,
                "sourceUnit": 533,
                "src": "709:44:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/mieszkokycermann/Desktop/contract/interfaces/IFuturesProvider.sol",
                "file": "../interfaces/IFuturesProvider.sol",
                "id": 11,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 507,
                "sourceUnit": 589,
                "src": "754:44:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "constant": true,
                "id": 14,
                "mutability": "constant",
                "name": "METRIC_PRICE_LESS_THAN",
                "nameLocation": "815:22:0",
                "nodeType": "VariableDeclaration",
                "scope": 507,
                "src": "800:41:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                },
                "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:5:0",
                    "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                    }
                },
                "value": {
                    "hexValue": "31",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "840:1:0",
                    "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                    },
                    "value": "1"
                },
                "visibility": "internal"
            },
            {
                "constant": true,
                "id": 17,
                "mutability": "constant",
                "name": "METRIC_PRICE_MORE_THAN_OR_EQUAL_TO",
                "nameLocation": "858:34:0",
                "nodeType": "VariableDeclaration",
                "scope": 507,
                "src": "843:53:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                },
                "typeName": {
                    "id": 15,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:5:0",
                    "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                    }
                },
                "value": {
                    "hexValue": "32",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "895:1:0",
                    "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                    },
                    "value": "2"
                },
                "visibility": "internal"
            },
            {
                "canonicalName": "Future",
                "id": 28,
                "members": [
                    {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "exists",
                        "nameLocation": "922:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "917:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                        },
                        "typeName": {
                            "id": 18,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "917:4:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "asset",
                        "nameLocation": "939:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "932:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 20,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "932:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "metric",
                        "nameLocation": "954:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "948:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 22,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "948:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "971:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "964:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                        },
                        "typeName": {
                            "id": 24,
                            "name": "uint80",
                            "nodeType": "ElementaryTypeName",
                            "src": "964:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nameLocation": "987:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "980:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                        },
                        "typeName": {
                            "id": 26,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "980:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                            }
                        },
                        "visibility": "internal"
                    }
                ],
                "name": "Future",
                "nameLocation": "906:6:0",
                "nodeType": "StructDefinition",
                "scope": 507,
                "src": "899:98:0",
                "visibility": "public"
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 30,
                            "name": "ConfirmedOwner",
                            "nameLocations": [
                                "1169:14:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1396,
                            "src": "1169:14:0"
                        },
                        "id": 31,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1169:14:0"
                    },
                    {
                        "baseName": {
                            "id": 32,
                            "name": "IFuturesProvider",
                            "nameLocations": [
                                "1185:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 588,
                            "src": "1185:16:0"
                        },
                        "id": 33,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1185:16:0"
                    }
                ],
                "canonicalName": "SoritesPriceFuturesProvider",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 29,
                    "nodeType": "StructuredDocumentation",
                    "src": "999:129:0",
                    "text": " This contract resolved Sorites marketEvents to Yes or No depending\n on the price of an asset after a specified time.*"
                },
                "fullyImplemented": true,
                "id": 506,
                "linearizedBaseContracts": [
                    506,
                    588,
                    1396,
                    1559,
                    1621
                ],
                "name": "SoritesPriceFuturesProvider",
                "nameLocation": "1138:27:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "3c0b9ec1",
                        "id": 37,
                        "mutability": "mutable",
                        "name": "chainlinkPriceOracles",
                        "nameLocation": "1372:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "1337:56:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                            "typeString": "mapping(string => address)"
                        },
                        "typeName": {
                            "id": 36,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 34,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1346:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1337:27:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string => address)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 35,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1356:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 41,
                        "mutability": "mutable",
                        "name": "supportedAssetsSet",
                        "nameLocation": "1430:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "1397:51:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                            "typeString": "mapping(string => bool)"
                        },
                        "typeName": {
                            "id": 40,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 38,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1406:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1397:24:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                "typeString": "mapping(string => bool)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 39,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "1416:4:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                }
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "functionSelector": "c68dbb37",
                        "id": 44,
                        "mutability": "mutable",
                        "name": "supportedAssets",
                        "nameLocation": "1468:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "1452:31:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 42,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1452:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                }
                            },
                            "id": 43,
                            "nodeType": "ArrayTypeName",
                            "src": "1452:8:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 95,
                            "nodeType": "Block",
                            "src": "1578:364:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 61,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "baseExpression": {
                                                        "id": 54,
                                                        "name": "chainlinkPriceOracles",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 37,
                                                        "src": "1592:21:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                                            "typeString": "mapping(string memory => address)"
                                                        }
                                                    },
                                                    "id": 56,
                                                    "indexExpression": {
                                                        "id": 55,
                                                        "name": "asset",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 46,
                                                        "src": "1614:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_calldata_ptr",
                                                            "typeString": "string calldata"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1592:28:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 59,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1632:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 58,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1624:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 57,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1624:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 60,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1624:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1592:42:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "457869737473",
                                                "id": 62,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1636:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8a82183508c0fc80182b23aff5b56dce60c4404ecd7cc2d12c1be51be2cd7e9b",
                                                    "typeString": "literal_string \"Exists\""
                                                },
                                                "value": "Exists"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8a82183508c0fc80182b23aff5b56dce60c4404ecd7cc2d12c1be51be2cd7e9b",
                                                    "typeString": "literal_string \"Exists\""
                                                }
                                            ],
                                            "id": 53,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1584:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 63,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1584:61:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 64,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1584:61:0"
                                },
                                {
                                    "assignments": [
                                        67
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 67,
                                            "mutability": "mutable",
                                            "name": "aggregator",
                                            "nameLocation": "1740:10:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 95,
                                            "src": "1718:32:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                "typeString": "contract AggregatorV3Interface"
                                            },
                                            "typeName": {
                                                "id": 66,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 65,
                                                    "name": "AggregatorV3Interface",
                                                    "nameLocations": [
                                                        "1718:21:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1605,
                                                    "src": "1718:21:0"
                                                },
                                                "referencedDeclaration": 1605,
                                                "src": "1718:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                    "typeString": "contract AggregatorV3Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 71,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 69,
                                                "name": "oracleAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 48,
                                                "src": "1775:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 68,
                                            "name": "AggregatorV3Interface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1605,
                                            "src": "1753:21:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1605_$",
                                                "typeString": "type(contract AggregatorV3Interface)"
                                            }
                                        },
                                        "id": 70,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1753:36:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                            "typeString": "contract AggregatorV3Interface"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1718:71:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 72,
                                                "name": "aggregator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 67,
                                                "src": "1795:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                    "typeString": "contract AggregatorV3Interface"
                                                }
                                            },
                                            "id": 74,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1806:7:0",
                                            "memberName": "version",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1576,
                                            "src": "1795:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view external returns (uint256)"
                                            }
                                        },
                                        "id": 75,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1795:20:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 76,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1795:20:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 80,
                                                "name": "asset",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46,
                                                "src": "1843:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            ],
                                            "expression": {
                                                "id": 77,
                                                "name": "supportedAssets",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 44,
                                                "src": "1822:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                                    "typeString": "string storage ref[] storage ref"
                                                }
                                            },
                                            "id": 79,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1838:4:0",
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "1822:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                                                "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                                            }
                                        },
                                        "id": 81,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1822:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 82,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1822:27:0"
                                },
                                {
                                    "expression": {
                                        "id": 87,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 83,
                                                "name": "chainlinkPriceOracles",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 37,
                                                "src": "1855:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                                    "typeString": "mapping(string memory => address)"
                                                }
                                            },
                                            "id": 85,
                                            "indexExpression": {
                                                "id": 84,
                                                "name": "asset",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46,
                                                "src": "1877:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1855:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 86,
                                            "name": "oracleAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 48,
                                            "src": "1886:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1855:44:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 88,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1855:44:0"
                                },
                                {
                                    "expression": {
                                        "id": 93,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 89,
                                                "name": "supportedAssetsSet",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 41,
                                                "src": "1905:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                                    "typeString": "mapping(string memory => bool)"
                                                }
                                            },
                                            "id": 91,
                                            "indexExpression": {
                                                "id": 90,
                                                "name": "asset",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46,
                                                "src": "1924:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1905:25:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 92,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1933:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "1905:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 94,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1905:32:0"
                                }
                            ]
                        },
                        "functionSelector": "e056de27",
                        "id": 96,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 51,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 50,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1568:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1558,
                                    "src": "1568:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1568:9:0"
                            }
                        ],
                        "name": "addSupportedAsset",
                        "nameLocation": "1497:17:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 49,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "asset",
                                    "nameLocation": "1531:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 96,
                                    "src": "1515:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1515:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 48,
                                    "mutability": "mutable",
                                    "name": "oracleAddress",
                                    "nameLocation": "1546:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 96,
                                    "src": "1538:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1538:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1514:46:0"
                        },
                        "returnParameters": {
                            "id": 52,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1578:0:0"
                        },
                        "scope": 506,
                        "src": "1488:454:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "dbc2d042",
                        "id": 98,
                        "mutability": "mutable",
                        "name": "consumerAddress",
                        "nameLocation": "1984:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "1969:30:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 97,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1969:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "consumer",
                        "nameLocation": "2028:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "2003:33:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFuturesConsumer_$532",
                            "typeString": "contract IFuturesConsumer"
                        },
                        "typeName": {
                            "id": 100,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 99,
                                "name": "IFuturesConsumer",
                                "nameLocations": [
                                    "2003:16:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 532,
                                "src": "2003:16:0"
                            },
                            "referencedDeclaration": 532,
                            "src": "2003:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFuturesConsumer_$532",
                                "typeString": "contract IFuturesConsumer"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 106,
                        "mutability": "mutable",
                        "name": "futures",
                        "nameLocation": "2067:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "2040:34:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                            "typeString": "mapping(uint80 => struct Future)"
                        },
                        "typeName": {
                            "id": 105,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 102,
                                "name": "uint80",
                                "nodeType": "ElementaryTypeName",
                                "src": "2049:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "2040:26:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                                "typeString": "mapping(uint80 => struct Future)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 104,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                    "id": 103,
                                    "name": "Future",
                                    "nameLocations": [
                                        "2059:6:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 28,
                                    "src": "2059:6:0"
                                },
                                "referencedDeclaration": 28,
                                "src": "2059:6:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                    "typeString": "struct Future"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 183,
                            "nodeType": "Block",
                            "src": "2354:528:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 131,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    },
                                                    "id": 127,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 125,
                                                        "name": "metric",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 111,
                                                        "src": "2368:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "id": 126,
                                                        "name": "METRIC_PRICE_LESS_THAN",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 14,
                                                        "src": "2378:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "2368:32:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    },
                                                    "id": 130,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 128,
                                                        "name": "metric",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 111,
                                                        "src": "2404:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "id": 129,
                                                        "name": "METRIC_PRICE_MORE_THAN_OR_EQUAL_TO",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 17,
                                                        "src": "2414:34:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "2404:44:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "2368:80:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "426164206d6574726963",
                                                "id": 132,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2450:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c05315e6d28967e40edd70627561d70988a41af05eb871576f2bbdbe7f84dada",
                                                    "typeString": "literal_string \"Bad metric\""
                                                },
                                                "value": "Bad metric"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_c05315e6d28967e40edd70627561d70988a41af05eb871576f2bbdbe7f84dada",
                                                    "typeString": "literal_string \"Bad metric\""
                                                }
                                            ],
                                            "id": 124,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2360:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 133,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2360:103:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 134,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2360:103:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "baseExpression": {
                                                    "id": 136,
                                                    "name": "supportedAssetsSet",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 41,
                                                    "src": "2477:18:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                                        "typeString": "mapping(string memory => bool)"
                                                    }
                                                },
                                                "id": 138,
                                                "indexExpression": {
                                                    "id": 137,
                                                    "name": "asset",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 109,
                                                    "src": "2496:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_calldata_ptr",
                                                        "typeString": "string calldata"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2477:25:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "426164206173736574",
                                                "id": 139,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2504:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_ac4a01f2b2af1737d885b5eaa43c522398903b3812046f2c9ccce2092fc20048",
                                                    "typeString": "literal_string \"Bad asset\""
                                                },
                                                "value": "Bad asset"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_ac4a01f2b2af1737d885b5eaa43c522398903b3812046f2c9ccce2092fc20048",
                                                    "typeString": "literal_string \"Bad asset\""
                                                }
                                            ],
                                            "id": 135,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2469:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 140,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2469:47:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 141,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2469:47:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                },
                                                "id": 145,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 143,
                                                    "name": "value",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 113,
                                                    "src": "2530:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint80",
                                                        "typeString": "uint80"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "hexValue": "31",
                                                    "id": 144,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2539:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "2530:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4261642076616c7565",
                                                "id": 146,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2542:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c01da7ba1f0ae6a961bbd3270b54c9f55cd07ae42259cf6bf6240a474d21a814",
                                                    "typeString": "literal_string \"Bad value\""
                                                },
                                                "value": "Bad value"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_c01da7ba1f0ae6a961bbd3270b54c9f55cd07ae42259cf6bf6240a474d21a814",
                                                    "typeString": "literal_string \"Bad value\""
                                                }
                                            ],
                                            "id": 142,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2522:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 147,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2522:32:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 148,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2522:32:0"
                                },
                                {
                                    "assignments": [
                                        150
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 150,
                                            "mutability": "mutable",
                                            "name": "marketEventId",
                                            "nameLocation": "2568:13:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 183,
                                            "src": "2561:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint80",
                                                "typeString": "uint80"
                                            },
                                            "typeName": {
                                                "id": 149,
                                                "name": "uint80",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2561:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 159,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 153,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2611:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 154,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "2615:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2611:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 155,
                                                "name": "endTime",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 115,
                                                "src": "2623:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                }
                                            },
                                            {
                                                "id": 156,
                                                "name": "usdcToDeposit",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 117,
                                                "src": "2632:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            },
                                            {
                                                "id": 157,
                                                "name": "speculatingOnYes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 119,
                                                "src": "2647:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "expression": {
                                                "id": 151,
                                                "name": "consumer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 101,
                                                "src": "2584:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IFuturesConsumer_$532",
                                                    "typeString": "contract IFuturesConsumer"
                                                }
                                            },
                                            "id": 152,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2593:17:0",
                                            "memberName": "createMarketEvent",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 523,
                                            "src": "2584:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint80_$_t_bool_$returns$_t_uint80_$",
                                                "typeString": "function (address,uint64,uint80,bool) external returns (uint80)"
                                            }
                                        },
                                        "id": 158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2584:80:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2561:103:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 165,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "!",
                                                "prefix": true,
                                                "src": "2732:30:0",
                                                "subExpression": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 161,
                                                            "name": "futures",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 106,
                                                            "src": "2733:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                                                                "typeString": "mapping(uint80 => struct Future storage ref)"
                                                            }
                                                        },
                                                        "id": 163,
                                                        "indexExpression": {
                                                            "id": 162,
                                                            "name": "marketEventId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 150,
                                                            "src": "2741:13:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint80",
                                                                "typeString": "uint80"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2733:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Future_$28_storage",
                                                            "typeString": "struct Future storage ref"
                                                        }
                                                    },
                                                    "id": 164,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "2756:6:0",
                                                    "memberName": "exists",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 19,
                                                    "src": "2733:29:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4578697374696e67",
                                                "id": 166,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2764:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_cc612e3d5cb4ee1ea510b86f130faaccf8feabe7d1e6f7806d1f6439e4955b32",
                                                    "typeString": "literal_string \"Existing\""
                                                },
                                                "value": "Existing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_cc612e3d5cb4ee1ea510b86f130faaccf8feabe7d1e6f7806d1f6439e4955b32",
                                                    "typeString": "literal_string \"Existing\""
                                                }
                                            ],
                                            "id": 160,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2724:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 167,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2724:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 168,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2724:51:0"
                                },
                                {
                                    "expression": {
                                        "id": 179,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 169,
                                                "name": "futures",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 106,
                                                "src": "2782:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                                                    "typeString": "mapping(uint80 => struct Future storage ref)"
                                                }
                                            },
                                            "id": 171,
                                            "indexExpression": {
                                                "id": 170,
                                                "name": "marketEventId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 150,
                                                "src": "2790:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2782:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Future_$28_storage",
                                                "typeString": "struct Future storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "74727565",
                                                    "id": 173,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2814:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                {
                                                    "id": 174,
                                                    "name": "asset",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 109,
                                                    "src": "2820:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_calldata_ptr",
                                                        "typeString": "string calldata"
                                                    }
                                                },
                                                {
                                                    "id": 175,
                                                    "name": "metric",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 111,
                                                    "src": "2827:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                {
                                                    "id": 176,
                                                    "name": "value",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 113,
                                                    "src": "2835:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint80",
                                                        "typeString": "uint80"
                                                    }
                                                },
                                                {
                                                    "id": 177,
                                                    "name": "endTime",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 115,
                                                    "src": "2842:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint64",
                                                        "typeString": "uint64"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_string_calldata_ptr",
                                                        "typeString": "string calldata"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint80",
                                                        "typeString": "uint80"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint64",
                                                        "typeString": "uint64"
                                                    }
                                                ],
                                                "id": 172,
                                                "name": "Future",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
                                                "src": "2807:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_Future_$28_storage_ptr_$",
                                                    "typeString": "type(struct Future storage pointer)"
                                                }
                                            },
                                            "id": 178,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2807:43:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Future_$28_memory_ptr",
                                                "typeString": "struct Future memory"
                                            }
                                        },
                                        "src": "2782:68:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Future_$28_storage",
                                            "typeString": "struct Future storage ref"
                                        }
                                    },
                                    "id": 180,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2782:68:0"
                                },
                                {
                                    "expression": {
                                        "id": 181,
                                        "name": "marketEventId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 150,
                                        "src": "2864:13:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "functionReturnParameters": 123,
                                    "id": 182,
                                    "nodeType": "Return",
                                    "src": "2857:20:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 107,
                            "nodeType": "StructuredDocumentation",
                            "src": "2079:81:0",
                            "text": " This function is to be used by the public to create a Market Event"
                        },
                        "functionSelector": "3e18f960",
                        "id": 184,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "createMarketEvent",
                        "nameLocation": "2172:17:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 120,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 109,
                                    "mutability": "mutable",
                                    "name": "asset",
                                    "nameLocation": "2211:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "2195:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 108,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2195:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 111,
                                    "mutability": "mutable",
                                    "name": "metric",
                                    "nameLocation": "2228:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "2222:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 110,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2222:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 113,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "2247:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "2240:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 112,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2240:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 115,
                                    "mutability": "mutable",
                                    "name": "endTime",
                                    "nameLocation": "2265:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "2258:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                    },
                                    "typeName": {
                                        "id": 114,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2258:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 117,
                                    "mutability": "mutable",
                                    "name": "usdcToDeposit",
                                    "nameLocation": "2285:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "2278:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 116,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2278:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 119,
                                    "mutability": "mutable",
                                    "name": "speculatingOnYes",
                                    "nameLocation": "2309:16:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "2304:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 118,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2304:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2189:140:0"
                        },
                        "returnParameters": {
                            "id": 123,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 122,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "2346:6:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 121,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2346:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2345:8:0"
                        },
                        "scope": 506,
                        "src": "2163:719:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 284,
                            "nodeType": "Block",
                            "src": "3348:967:0",
                            "statements": [
                                {
                                    "assignments": [
                                        194
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 194,
                                            "mutability": "mutable",
                                            "name": "future",
                                            "nameLocation": "3369:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 284,
                                            "src": "3354:21:0",
                                            "stateVariable": false,
                                            "storageLocation": "storage",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                "typeString": "struct Future"
                                            },
                                            "typeName": {
                                                "id": 193,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 192,
                                                    "name": "Future",
                                                    "nameLocations": [
                                                        "3354:6:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 28,
                                                    "src": "3354:6:0"
                                                },
                                                "referencedDeclaration": 28,
                                                "src": "3354:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                    "typeString": "struct Future"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 198,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 195,
                                            "name": "futures",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 106,
                                            "src": "3378:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                                                "typeString": "mapping(uint80 => struct Future storage ref)"
                                            }
                                        },
                                        "id": 197,
                                        "indexExpression": {
                                            "id": 196,
                                            "name": "marketEventId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 187,
                                            "src": "3386:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint80",
                                                "typeString": "uint80"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3378:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Future_$28_storage",
                                            "typeString": "struct Future storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3354:46:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 200,
                                                    "name": "future",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 194,
                                                    "src": "3440:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                        "typeString": "struct Future storage pointer"
                                                    }
                                                },
                                                "id": 201,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3447:6:0",
                                                "memberName": "exists",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 19,
                                                "src": "3440:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "426164206d61726b65744576656e744964",
                                                "id": 202,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3455:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                },
                                                "value": "Bad marketEventId"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                }
                                            ],
                                            "id": 199,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3432:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3432:43:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 204,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3432:43:0"
                                },
                                {
                                    "assignments": [
                                        206
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 206,
                                            "mutability": "mutable",
                                            "name": "oracleAddress",
                                            "nameLocation": "3490:13:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 284,
                                            "src": "3482:21:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 205,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3482:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 211,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 207,
                                            "name": "chainlinkPriceOracles",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37,
                                            "src": "3506:21:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                                "typeString": "mapping(string memory => address)"
                                            }
                                        },
                                        "id": 210,
                                        "indexExpression": {
                                            "expression": {
                                                "id": 208,
                                                "name": "future",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 194,
                                                "src": "3528:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                    "typeString": "struct Future storage pointer"
                                                }
                                            },
                                            "id": 209,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3535:5:0",
                                            "memberName": "asset",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21,
                                            "src": "3528:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3506:35:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3482:59:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 218,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 213,
                                                    "name": "oracleAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 206,
                                                    "src": "3556:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 216,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3581:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 215,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3573:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 214,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3573:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 217,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3573:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3556:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "426164206d61726b65744576656e744964",
                                                "id": 219,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3585:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                },
                                                "value": "Bad marketEventId"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                }
                                            ],
                                            "id": 212,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3548:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 220,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3548:57:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 221,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3548:57:0"
                                },
                                {
                                    "assignments": [
                                        224
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 224,
                                            "mutability": "mutable",
                                            "name": "aggregator",
                                            "nameLocation": "3634:10:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 284,
                                            "src": "3612:32:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                "typeString": "contract AggregatorV3Interface"
                                            },
                                            "typeName": {
                                                "id": 223,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 222,
                                                    "name": "AggregatorV3Interface",
                                                    "nameLocations": [
                                                        "3612:21:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1605,
                                                    "src": "3612:21:0"
                                                },
                                                "referencedDeclaration": 1605,
                                                "src": "3612:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                    "typeString": "contract AggregatorV3Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 228,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 226,
                                                "name": "oracleAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 206,
                                                "src": "3669:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 225,
                                            "name": "AggregatorV3Interface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1605,
                                            "src": "3647:21:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1605_$",
                                                "typeString": "type(contract AggregatorV3Interface)"
                                            }
                                        },
                                        "id": 227,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3647:36:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                            "typeString": "contract AggregatorV3Interface"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3612:71:0"
                                },
                                {
                                    "assignments": [
                                        230
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 230,
                                            "mutability": "mutable",
                                            "name": "answer",
                                            "nameLocation": "3697:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 284,
                                            "src": "3690:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint80",
                                                "typeString": "uint80"
                                            },
                                            "typeName": {
                                                "id": 229,
                                                "name": "uint80",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3690:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 237,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 232,
                                                    "name": "future",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 194,
                                                    "src": "3727:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                        "typeString": "struct Future storage pointer"
                                                    }
                                                },
                                                "id": 233,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3734:7:0",
                                                "memberName": "endTime",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 27,
                                                "src": "3727:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                }
                                            },
                                            {
                                                "id": 234,
                                                "name": "aggregatorRoundId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 189,
                                                "src": "3749:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            },
                                            {
                                                "id": 235,
                                                "name": "aggregator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 224,
                                                "src": "3774:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                    "typeString": "contract AggregatorV3Interface"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                },
                                                {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                    "typeString": "contract AggregatorV3Interface"
                                                }
                                            ],
                                            "id": 231,
                                            "name": "getRoundPrice",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 345,
                                            "src": "3706:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_uint80_$_t_uint80_$_t_contract$_AggregatorV3Interface_$1605_$returns$_t_uint80_$",
                                                "typeString": "function (uint80,uint80,contract AggregatorV3Interface) view returns (uint80)"
                                            }
                                        },
                                        "id": 236,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3706:84:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3690:100:0"
                                },
                                {
                                    "assignments": [
                                        239
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 239,
                                            "mutability": "mutable",
                                            "name": "outcomeWasMet",
                                            "nameLocation": "3802:13:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 284,
                                            "src": "3797:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 238,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3797:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 240,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3797:18:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "id": 244,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 241,
                                                "name": "future",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 194,
                                                "src": "3826:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                    "typeString": "struct Future storage pointer"
                                                }
                                            },
                                            "id": 242,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3833:6:0",
                                            "memberName": "metric",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 23,
                                            "src": "3826:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "id": 243,
                                            "name": "METRIC_PRICE_LESS_THAN",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 14,
                                            "src": "3843:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "src": "3826:39:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            },
                                            "id": 256,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "expression": {
                                                    "id": 253,
                                                    "name": "future",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 194,
                                                    "src": "3929:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                        "typeString": "struct Future storage pointer"
                                                    }
                                                },
                                                "id": 254,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3936:6:0",
                                                "memberName": "metric",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 23,
                                                "src": "3929:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "id": 255,
                                                "name": "METRIC_PRICE_MORE_THAN_OR_EQUAL_TO",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 17,
                                                "src": "3946:34:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "src": "3929:51:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "id": 269,
                                            "nodeType": "Block",
                                            "src": "4041:35:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "426164206d6574726963",
                                                                "id": 266,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "string",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4056:12:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_stringliteral_c05315e6d28967e40edd70627561d70988a41af05eb871576f2bbdbe7f84dada",
                                                                    "typeString": "literal_string \"Bad metric\""
                                                                },
                                                                "value": "Bad metric"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_c05315e6d28967e40edd70627561d70988a41af05eb871576f2bbdbe7f84dada",
                                                                    "typeString": "literal_string \"Bad metric\""
                                                                }
                                                            ],
                                                            "id": 265,
                                                            "name": "revert",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [
                                                                4294967277,
                                                                4294967277
                                                            ],
                                                            "referencedDeclaration": 4294967277,
                                                            "src": "4049:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                "typeString": "function (string memory) pure"
                                                            }
                                                        },
                                                        "id": 267,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4049:20:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_tuple$__$",
                                                            "typeString": "tuple()"
                                                        }
                                                    },
                                                    "id": 268,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "4049:20:0"
                                                }
                                            ]
                                        },
                                        "id": 270,
                                        "nodeType": "IfStatement",
                                        "src": "3925:151:0",
                                        "trueBody": {
                                            "id": 264,
                                            "nodeType": "Block",
                                            "src": "3982:53:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "id": 262,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                            "id": 257,
                                                            "name": "outcomeWasMet",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 239,
                                                            "src": "3990:13:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint80",
                                                                "typeString": "uint80"
                                                            },
                                                            "id": 261,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "id": 258,
                                                                    "name": "future",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 194,
                                                                    "src": "4006:6:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                                        "typeString": "struct Future storage pointer"
                                                                    }
                                                                },
                                                                "id": 259,
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberLocation": "4013:5:0",
                                                                "memberName": "value",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 25,
                                                                "src": "4006:12:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint80",
                                                                    "typeString": "uint80"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": ">=",
                                                            "rightExpression": {
                                                                "id": 260,
                                                                "name": "answer",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 230,
                                                                "src": "4022:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint80",
                                                                    "typeString": "uint80"
                                                                }
                                                            },
                                                            "src": "4006:22:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "src": "3990:38:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "id": 263,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "3990:38:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 271,
                                    "nodeType": "IfStatement",
                                    "src": "3822:254:0",
                                    "trueBody": {
                                        "id": 252,
                                        "nodeType": "Block",
                                        "src": "3867:52:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 250,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 245,
                                                        "name": "outcomeWasMet",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 239,
                                                        "src": "3875:13:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint80",
                                                            "typeString": "uint80"
                                                        },
                                                        "id": 249,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 246,
                                                                "name": "future",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 194,
                                                                "src": "3891:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                                    "typeString": "struct Future storage pointer"
                                                                }
                                                            },
                                                            "id": 247,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "3898:5:0",
                                                            "memberName": "value",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 25,
                                                            "src": "3891:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint80",
                                                                "typeString": "uint80"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "<",
                                                        "rightExpression": {
                                                            "id": 248,
                                                            "name": "answer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 230,
                                                            "src": "3906:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint80",
                                                                "typeString": "uint80"
                                                            }
                                                        },
                                                        "src": "3891:21:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "src": "3875:37:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 251,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3875:37:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 275,
                                                "name": "marketEventId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 187,
                                                "src": "4142:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            },
                                            {
                                                "id": 276,
                                                "name": "outcomeWasMet",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 239,
                                                "src": "4157:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "expression": {
                                                "id": 272,
                                                "name": "consumer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 101,
                                                "src": "4114:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IFuturesConsumer_$532",
                                                    "typeString": "contract IFuturesConsumer"
                                                }
                                            },
                                            "id": 274,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4123:18:0",
                                            "memberName": "resolveMarketEvent",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 531,
                                            "src": "4114:27:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_uint80_$_t_bool_$returns$__$",
                                                "typeString": "function (uint80,bool) external"
                                            }
                                        },
                                        "id": 277,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4114:57:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 278,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4114:57:0"
                                },
                                {
                                    "expression": {
                                        "id": 282,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "delete",
                                        "prefix": true,
                                        "src": "4281:29:0",
                                        "subExpression": {
                                            "baseExpression": {
                                                "id": 279,
                                                "name": "futures",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 106,
                                                "src": "4288:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                                                    "typeString": "mapping(uint80 => struct Future storage ref)"
                                                }
                                            },
                                            "id": 281,
                                            "indexExpression": {
                                                "id": 280,
                                                "name": "marketEventId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 187,
                                                "src": "4296:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "4288:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Future_$28_storage",
                                                "typeString": "struct Future storage ref"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 283,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4281:29:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 185,
                            "nodeType": "StructuredDocumentation",
                            "src": "2886:376:0",
                            "text": " This function is how the public can request for a marketEvent to be resolved.\n {aggregatorRoundId} is the Round ID from Chainlink, and it must be such that\n {aggregatorRoundId} is on/after the endTime but {aggregatorRoundId - 1} is before the endTime.\n This is to ensure that we use the earliest available round that falls on/after the endTime."
                        },
                        "functionSelector": "6f685e75",
                        "id": 285,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "resolveMarketEvent",
                        "nameLocation": "3274:18:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 190,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 187,
                                    "mutability": "mutable",
                                    "name": "marketEventId",
                                    "nameLocation": "3300:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 285,
                                    "src": "3293:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 186,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3293:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 189,
                                    "mutability": "mutable",
                                    "name": "aggregatorRoundId",
                                    "nameLocation": "3322:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 285,
                                    "src": "3315:24:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 188,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3315:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3292:48:0"
                        },
                        "returnParameters": {
                            "id": 191,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3348:0:0"
                        },
                        "scope": 506,
                        "src": "3265:1050:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 344,
                            "nodeType": "Block",
                            "src": "4448:634:0",
                            "statements": [
                                {
                                    "assignments": [
                                        null,
                                        298,
                                        null,
                                        300,
                                        null
                                    ],
                                    "declarations": [
                                        null,
                                        {
                                            "constant": false,
                                            "id": 298,
                                            "mutability": "mutable",
                                            "name": "answer",
                                            "nameLocation": "4521:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 344,
                                            "src": "4514:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            },
                                            "typeName": {
                                                "id": 297,
                                                "name": "int256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4514:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null,
                                        {
                                            "constant": false,
                                            "id": 300,
                                            "mutability": "mutable",
                                            "name": "updatedAt",
                                            "nameLocation": "4537:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 344,
                                            "src": "4529:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 299,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4529:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null
                                    ],
                                    "id": 305,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 303,
                                                "name": "aggregatorRoundId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 289,
                                                "src": "4575:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            ],
                                            "expression": {
                                                "id": 301,
                                                "name": "aggregator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 292,
                                                "src": "4551:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                    "typeString": "contract AggregatorV3Interface"
                                                }
                                            },
                                            "id": 302,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4562:12:0",
                                            "memberName": "getRoundData",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1591,
                                            "src": "4551:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                                "typeString": "function (uint80) view external returns (uint80,int256,uint256,uint256,uint80)"
                                            }
                                        },
                                        "id": 304,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4551:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4512:81:0"
                                },
                                {
                                    "assignments": [
                                        null,
                                        null,
                                        null,
                                        307,
                                        null
                                    ],
                                    "declarations": [
                                        null,
                                        null,
                                        null,
                                        {
                                            "constant": false,
                                            "id": 307,
                                            "mutability": "mutable",
                                            "name": "previousUpdatedAt",
                                            "nameLocation": "4611:17:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 344,
                                            "src": "4603:25:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 306,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4603:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null
                                    ],
                                    "id": 314,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                },
                                                "id": 312,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 310,
                                                    "name": "aggregatorRoundId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 289,
                                                    "src": "4657:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint80",
                                                        "typeString": "uint80"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                    "hexValue": "31",
                                                    "id": 311,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4677:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "4657:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint80",
                                                    "typeString": "uint80"
                                                }
                                            ],
                                            "expression": {
                                                "id": 308,
                                                "name": "aggregator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 292,
                                                "src": "4633:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                                    "typeString": "contract AggregatorV3Interface"
                                                }
                                            },
                                            "id": 309,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4644:12:0",
                                            "memberName": "getRoundData",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1591,
                                            "src": "4633:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                                "typeString": "function (uint80) view external returns (uint80,int256,uint256,uint256,uint80)"
                                            }
                                        },
                                        "id": 313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4633:46:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4599:80:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 318,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 316,
                                                    "name": "updatedAt",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 300,
                                                    "src": "4746:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "id": 317,
                                                    "name": "endTime",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 287,
                                                    "src": "4759:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint80",
                                                        "typeString": "uint80"
                                                    }
                                                },
                                                "src": "4746:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "42616420726f756e6420283129",
                                                "id": 319,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4768:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_198e0825e48c8205f5d84127a0834665761ac72256b27565f81672e9e9729338",
                                                    "typeString": "literal_string \"Bad round (1)\""
                                                },
                                                "value": "Bad round (1)"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_198e0825e48c8205f5d84127a0834665761ac72256b27565f81672e9e9729338",
                                                    "typeString": "literal_string \"Bad round (1)\""
                                                }
                                            ],
                                            "id": 315,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "4738:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 320,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4738:46:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 321,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4738:46:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 325,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 323,
                                                    "name": "previousUpdatedAt",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 307,
                                                    "src": "4853:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "id": 324,
                                                    "name": "endTime",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 287,
                                                    "src": "4873:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint80",
                                                        "typeString": "uint80"
                                                    }
                                                },
                                                "src": "4853:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "42616420726f756e6420283229",
                                                "id": 326,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4882:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_44e62b30da6bc6d73f00b6ac0d6c7e40875f6c83fe61f90a0d06a5290369f26d",
                                                    "typeString": "literal_string \"Bad round (2)\""
                                                },
                                                "value": "Bad round (2)"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_44e62b30da6bc6d73f00b6ac0d6c7e40875f6c83fe61f90a0d06a5290369f26d",
                                                    "typeString": "literal_string \"Bad round (2)\""
                                                }
                                            ],
                                            "id": 322,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "4845:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 327,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4845:53:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 328,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4845:53:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                },
                                                "id": 332,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 330,
                                                    "name": "answer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 298,
                                                    "src": "5015:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 331,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "5024:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "5015:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "42616420616e73776572",
                                                "id": 333,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5027:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_00039f6067bab42549a06f4eb5d5aae028a4b870887c53d2b23af5f0ea9a8f14",
                                                    "typeString": "literal_string \"Bad answer\""
                                                },
                                                "value": "Bad answer"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_00039f6067bab42549a06f4eb5d5aae028a4b870887c53d2b23af5f0ea9a8f14",
                                                    "typeString": "literal_string \"Bad answer\""
                                                }
                                            ],
                                            "id": 329,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "5007:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 334,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5007:33:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 335,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5007:33:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 340,
                                                        "name": "answer",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 298,
                                                        "src": "5069:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_int256",
                                                            "typeString": "int256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_int256",
                                                            "typeString": "int256"
                                                        }
                                                    ],
                                                    "id": 339,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "5061:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                    },
                                                    "typeName": {
                                                        "id": 338,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "5061:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 341,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5061:15:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 337,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5054:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint80_$",
                                                "typeString": "type(uint80)"
                                            },
                                            "typeName": {
                                                "id": 336,
                                                "name": "uint80",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5054:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 342,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5054:23:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "functionReturnParameters": 296,
                                    "id": 343,
                                    "nodeType": "Return",
                                    "src": "5047:30:0"
                                }
                            ]
                        },
                        "id": 345,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getRoundPrice",
                        "nameLocation": "4328:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 293,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 287,
                                    "mutability": "mutable",
                                    "name": "endTime",
                                    "nameLocation": "4349:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 345,
                                    "src": "4342:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 286,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4342:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 289,
                                    "mutability": "mutable",
                                    "name": "aggregatorRoundId",
                                    "nameLocation": "4365:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 345,
                                    "src": "4358:24:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 288,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4358:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 292,
                                    "mutability": "mutable",
                                    "name": "aggregator",
                                    "nameLocation": "4406:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 345,
                                    "src": "4384:32:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                        "typeString": "contract AggregatorV3Interface"
                                    },
                                    "typeName": {
                                        "id": 291,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 290,
                                            "name": "AggregatorV3Interface",
                                            "nameLocations": [
                                                "4384:21:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1605,
                                            "src": "4384:21:0"
                                        },
                                        "referencedDeclaration": 1605,
                                        "src": "4384:21:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$1605",
                                            "typeString": "contract AggregatorV3Interface"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4341:76:0"
                        },
                        "returnParameters": {
                            "id": 296,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 295,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 345,
                                    "src": "4440:6:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 294,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4440:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4439:8:0"
                        },
                        "scope": 506,
                        "src": "4319:763:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "private"
                    },
                    {
                        "baseFunctions": [
                            554
                        ],
                        "body": {
                            "id": 352,
                            "nodeType": "Block",
                            "src": "5169:41:0",
                            "statements": [
                                {
                                    "expression": {
                                        "hexValue": "5072696365206f6e20612066757475726520646179",
                                        "id": 350,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5182:23:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_261ecc4b61f6c05ddb5818156bba24411767756bcea767206f7aae71f7e92557",
                                            "typeString": "literal_string \"Price on a future day\""
                                        },
                                        "value": "Price on a future day"
                                    },
                                    "functionReturnParameters": 349,
                                    "id": 351,
                                    "nodeType": "Return",
                                    "src": "5175:30:0"
                                }
                            ]
                        },
                        "functionSelector": "9554c124",
                        "id": 353,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getLabel",
                        "nameLocation": "5122:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 346,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5130:2:0"
                        },
                        "returnParameters": {
                            "id": 349,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 348,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 353,
                                    "src": "5154:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 347,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5154:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5153:15:0"
                        },
                        "scope": 506,
                        "src": "5113:97:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            561
                        ],
                        "body": {
                            "id": 361,
                            "nodeType": "Block",
                            "src": "5282:33:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 359,
                                        "name": "supportedAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 44,
                                        "src": "5295:15:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 358,
                                    "id": 360,
                                    "nodeType": "Return",
                                    "src": "5288:22:0"
                                }
                            ]
                        },
                        "functionSelector": "e5406dbf",
                        "id": 362,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getSupportedAssets",
                        "nameLocation": "5223:18:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 354,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5241:2:0"
                        },
                        "returnParameters": {
                            "id": 358,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 357,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 362,
                                    "src": "5265:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "string[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 355,
                                            "name": "string",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5265:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage_ptr",
                                                "typeString": "string"
                                            }
                                        },
                                        "id": 356,
                                        "nodeType": "ArrayTypeName",
                                        "src": "5265:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                            "typeString": "string[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5264:17:0"
                        },
                        "scope": 506,
                        "src": "5214:101:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            569
                        ],
                        "body": {
                            "id": 395,
                            "nodeType": "Block",
                            "src": "5412:354:0",
                            "statements": [
                                {
                                    "assignments": [
                                        373
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 373,
                                            "mutability": "mutable",
                                            "name": "supportedMetricsValues",
                                            "nameLocation": "5458:22:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 395,
                                            "src": "5418:62:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct FuturesProviderSupportedMetric[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 371,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 370,
                                                        "name": "FuturesProviderSupportedMetric",
                                                        "nameLocations": [
                                                            "5418:30:0"
                                                        ],
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 539,
                                                        "src": "5418:30:0"
                                                    },
                                                    "referencedDeclaration": 539,
                                                    "src": "5418:30:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_storage_ptr",
                                                        "typeString": "struct FuturesProviderSupportedMetric"
                                                    }
                                                },
                                                "id": 372,
                                                "nodeType": "ArrayTypeName",
                                                "src": "5418:32:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_FuturesProviderSupportedMetric_$539_storage_$dyn_storage_ptr",
                                                    "typeString": "struct FuturesProviderSupportedMetric[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 374,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5418:62:0"
                                },
                                {
                                    "expression": {
                                        "id": 382,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 375,
                                                "name": "supportedMetricsValues",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 373,
                                                "src": "5487:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct FuturesProviderSupportedMetric memory[] memory"
                                                }
                                            },
                                            "id": 377,
                                            "indexExpression": {
                                                "hexValue": "30",
                                                "id": 376,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5510:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "5487:25:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr",
                                                "typeString": "struct FuturesProviderSupportedMetric memory"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 379,
                                                    "name": "METRIC_PRICE_LESS_THAN",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 14,
                                                    "src": "5546:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                {
                                                    "hexValue": "5072696365206973206c657373207468616e",
                                                    "id": 380,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "5570:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_5f09a1647e9f69e2b54ec4ff8ab0702ebe3fa47e7d050bd7213e15a61ab69d60",
                                                        "typeString": "literal_string \"Price is less than\""
                                                    },
                                                    "value": "Price is less than"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_stringliteral_5f09a1647e9f69e2b54ec4ff8ab0702ebe3fa47e7d050bd7213e15a61ab69d60",
                                                        "typeString": "literal_string \"Price is less than\""
                                                    }
                                                ],
                                                "id": 378,
                                                "name": "FuturesProviderSupportedMetric",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 539,
                                                "src": "5515:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_FuturesProviderSupportedMetric_$539_storage_ptr_$",
                                                    "typeString": "type(struct FuturesProviderSupportedMetric storage pointer)"
                                                }
                                            },
                                            "id": 381,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5515:76:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr",
                                                "typeString": "struct FuturesProviderSupportedMetric memory"
                                            }
                                        },
                                        "src": "5487:104:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr",
                                            "typeString": "struct FuturesProviderSupportedMetric memory"
                                        }
                                    },
                                    "id": 383,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5487:104:0"
                                },
                                {
                                    "expression": {
                                        "id": 391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 384,
                                                "name": "supportedMetricsValues",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 373,
                                                "src": "5597:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct FuturesProviderSupportedMetric memory[] memory"
                                                }
                                            },
                                            "id": 386,
                                            "indexExpression": {
                                                "hexValue": "31",
                                                "id": 385,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5620:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "5597:25:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr",
                                                "typeString": "struct FuturesProviderSupportedMetric memory"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 388,
                                                    "name": "METRIC_PRICE_MORE_THAN_OR_EQUAL_TO",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 17,
                                                    "src": "5656:34:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                {
                                                    "hexValue": "5072696365206973206d6f7265207468616e206f7220657175616c20746f",
                                                    "id": 389,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "5692:32:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_c9cbfd1bd0a0df6dc52966166b102720e22ef3fa782dc129153f9aafae68720a",
                                                        "typeString": "literal_string \"Price is more than or equal to\""
                                                    },
                                                    "value": "Price is more than or equal to"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_stringliteral_c9cbfd1bd0a0df6dc52966166b102720e22ef3fa782dc129153f9aafae68720a",
                                                        "typeString": "literal_string \"Price is more than or equal to\""
                                                    }
                                                ],
                                                "id": 387,
                                                "name": "FuturesProviderSupportedMetric",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 539,
                                                "src": "5625:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_FuturesProviderSupportedMetric_$539_storage_ptr_$",
                                                    "typeString": "type(struct FuturesProviderSupportedMetric storage pointer)"
                                                }
                                            },
                                            "id": 390,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5625:100:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr",
                                                "typeString": "struct FuturesProviderSupportedMetric memory"
                                            }
                                        },
                                        "src": "5597:128:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr",
                                            "typeString": "struct FuturesProviderSupportedMetric memory"
                                        }
                                    },
                                    "id": 392,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5597:128:0"
                                },
                                {
                                    "expression": {
                                        "id": 393,
                                        "name": "supportedMetricsValues",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 373,
                                        "src": "5739:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct FuturesProviderSupportedMetric memory[] memory"
                                        }
                                    },
                                    "functionReturnParameters": 368,
                                    "id": 394,
                                    "nodeType": "Return",
                                    "src": "5732:29:0"
                                }
                            ]
                        },
                        "functionSelector": "236126b2",
                        "id": 396,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getSupportedMetrics",
                        "nameLocation": "5328:19:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 363,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5347:2:0"
                        },
                        "returnParameters": {
                            "id": 368,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 367,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 396,
                                    "src": "5371:39:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FuturesProviderSupportedMetric_$539_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct FuturesProviderSupportedMetric[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 365,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 364,
                                                "name": "FuturesProviderSupportedMetric",
                                                "nameLocations": [
                                                    "5371:30:0"
                                                ],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 539,
                                                "src": "5371:30:0"
                                            },
                                            "referencedDeclaration": 539,
                                            "src": "5371:30:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_FuturesProviderSupportedMetric_$539_storage_ptr",
                                                "typeString": "struct FuturesProviderSupportedMetric"
                                            }
                                        },
                                        "id": 366,
                                        "nodeType": "ArrayTypeName",
                                        "src": "5371:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_FuturesProviderSupportedMetric_$539_storage_$dyn_storage_ptr",
                                            "typeString": "struct FuturesProviderSupportedMetric[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5370:41:0"
                        },
                        "scope": 506,
                        "src": "5319:447:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            577
                        ],
                        "body": {
                            "id": 426,
                            "nodeType": "Block",
                            "src": "5856:297:0",
                            "statements": [
                                {
                                    "assignments": [
                                        405
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 405,
                                            "mutability": "mutable",
                                            "name": "future",
                                            "nameLocation": "5877:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 426,
                                            "src": "5862:21:0",
                                            "stateVariable": false,
                                            "storageLocation": "storage",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                "typeString": "struct Future"
                                            },
                                            "typeName": {
                                                "id": 404,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 403,
                                                    "name": "Future",
                                                    "nameLocations": [
                                                        "5862:6:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 28,
                                                    "src": "5862:6:0"
                                                },
                                                "referencedDeclaration": 28,
                                                "src": "5862:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                    "typeString": "struct Future"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 409,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 406,
                                            "name": "futures",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 106,
                                            "src": "5886:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                                                "typeString": "mapping(uint80 => struct Future storage ref)"
                                            }
                                        },
                                        "id": 408,
                                        "indexExpression": {
                                            "id": 407,
                                            "name": "marketEventId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 398,
                                            "src": "5894:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint80",
                                                "typeString": "uint80"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5886:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Future_$28_storage",
                                            "typeString": "struct Future storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5862:46:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 411,
                                                    "name": "future",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 405,
                                                    "src": "5922:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                        "typeString": "struct Future storage pointer"
                                                    }
                                                },
                                                "id": 412,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5929:6:0",
                                                "memberName": "exists",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 19,
                                                "src": "5922:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "426164206d61726b65744576656e744964",
                                                "id": 413,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5937:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                },
                                                "value": "Bad marketEventId"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                }
                                            ],
                                            "id": 410,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "5914:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 414,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5914:43:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 415,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5914:43:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        },
                                        "id": 419,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 416,
                                                "name": "future",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 405,
                                                "src": "5968:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                    "typeString": "struct Future storage pointer"
                                                }
                                            },
                                            "id": 417,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5975:6:0",
                                            "memberName": "metric",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 23,
                                            "src": "5968:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "id": 418,
                                            "name": "METRIC_PRICE_LESS_THAN",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 14,
                                            "src": "5985:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "src": "5968:39:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 423,
                                    "nodeType": "IfStatement",
                                    "src": "5964:120:0",
                                    "trueBody": {
                                        "id": 422,
                                        "nodeType": "Block",
                                        "src": "6009:75:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "5072696365206f662041535345542077696c6c206265206c657373207468616e2056414c5545206f6e20454e445f444154452e",
                                                    "id": 420,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6024:53:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_ab04975b0d2bf91cc56eebd73ebb7a02a60a32be3ada9feee887b7c5ddd72402",
                                                        "typeString": "literal_string \"Price of ASSET will be less than VALUE on END_DATE.\""
                                                    },
                                                    "value": "Price of ASSET will be less than VALUE on END_DATE."
                                                },
                                                "functionReturnParameters": 402,
                                                "id": 421,
                                                "nodeType": "Return",
                                                "src": "6017:60:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "hexValue": "5072696365206f662041535345542077696c6c2062652056414c5545206f72206d6f7265206f6e20454e445f444154452e",
                                        "id": 424,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6097:51:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_2df41dbceae20d31b537e9549c22244e85d2932842074dc3abe30529911e22c4",
                                            "typeString": "literal_string \"Price of ASSET will be VALUE or more on END_DATE.\""
                                        },
                                        "value": "Price of ASSET will be VALUE or more on END_DATE."
                                    },
                                    "functionReturnParameters": 402,
                                    "id": 425,
                                    "nodeType": "Return",
                                    "src": "6090:58:0"
                                }
                            ]
                        },
                        "functionSelector": "af33a17b",
                        "id": 427,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getMarketEventName",
                        "nameLocation": "5779:18:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 399,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 398,
                                    "mutability": "mutable",
                                    "name": "marketEventId",
                                    "nameLocation": "5805:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 427,
                                    "src": "5798:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 397,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5798:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5797:22:0"
                        },
                        "returnParameters": {
                            "id": 402,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 401,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 427,
                                    "src": "5841:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 400,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5841:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5840:15:0"
                        },
                        "scope": 506,
                        "src": "5770:383:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            587
                        ],
                        "body": {
                            "id": 484,
                            "nodeType": "Block",
                            "src": "6261:307:0",
                            "statements": [
                                {
                                    "assignments": [
                                        438
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 438,
                                            "mutability": "mutable",
                                            "name": "future",
                                            "nameLocation": "6282:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 484,
                                            "src": "6267:21:0",
                                            "stateVariable": false,
                                            "storageLocation": "storage",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                "typeString": "struct Future"
                                            },
                                            "typeName": {
                                                "id": 437,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 436,
                                                    "name": "Future",
                                                    "nameLocations": [
                                                        "6267:6:0"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 28,
                                                    "src": "6267:6:0"
                                                },
                                                "referencedDeclaration": 28,
                                                "src": "6267:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                    "typeString": "struct Future"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 442,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 439,
                                            "name": "futures",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 106,
                                            "src": "6291:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint80_$_t_struct$_Future_$28_storage_$",
                                                "typeString": "mapping(uint80 => struct Future storage ref)"
                                            }
                                        },
                                        "id": 441,
                                        "indexExpression": {
                                            "id": 440,
                                            "name": "marketEventId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 429,
                                            "src": "6299:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint80",
                                                "typeString": "uint80"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6291:22:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Future_$28_storage",
                                            "typeString": "struct Future storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6267:46:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 444,
                                                    "name": "future",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 438,
                                                    "src": "6327:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                        "typeString": "struct Future storage pointer"
                                                    }
                                                },
                                                "id": 445,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "6334:6:0",
                                                "memberName": "exists",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 19,
                                                "src": "6327:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "426164206d61726b65744576656e744964",
                                                "id": 446,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6342:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                },
                                                "value": "Bad marketEventId"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_23b1c563959ab0e8d84431d501d5c8a3d8ec6e933176d39af037ccec3cb60794",
                                                    "typeString": "literal_string \"Bad marketEventId\""
                                                }
                                            ],
                                            "id": 443,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "6319:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 447,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6319:43:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 448,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6319:43:0"
                                },
                                {
                                    "assignments": [
                                        453
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 453,
                                            "mutability": "mutable",
                                            "name": "variables",
                                            "nameLocation": "6392:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 484,
                                            "src": "6369:32:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_LabelVariable_$547_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct LabelVariable[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 451,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 450,
                                                        "name": "LabelVariable",
                                                        "nameLocations": [
                                                            "6369:13:0"
                                                        ],
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 547,
                                                        "src": "6369:13:0"
                                                    },
                                                    "referencedDeclaration": 547,
                                                    "src": "6369:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LabelVariable_$547_storage_ptr",
                                                        "typeString": "struct LabelVariable"
                                                    }
                                                },
                                                "id": 452,
                                                "nodeType": "ArrayTypeName",
                                                "src": "6369:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_LabelVariable_$547_storage_$dyn_storage_ptr",
                                                    "typeString": "struct LabelVariable[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 454,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6369:32:0"
                                },
                                {
                                    "expression": {
                                        "id": 463,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 455,
                                                "name": "variables",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 453,
                                                "src": "6408:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_LabelVariable_$547_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct LabelVariable memory[] memory"
                                                }
                                            },
                                            "id": 457,
                                            "indexExpression": {
                                                "hexValue": "30",
                                                "id": 456,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6418:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "6408:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelVariable_$547_memory_ptr",
                                                "typeString": "struct LabelVariable memory"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "737472696e67",
                                                    "id": 459,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6437:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_97fc46276c172633607a331542609db1e3da793fca183d594ed5a61803a10792",
                                                        "typeString": "literal_string \"string\""
                                                    },
                                                    "value": "string"
                                                },
                                                {
                                                    "hexValue": "4153534554",
                                                    "id": 460,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6447:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_e15c4f51c2d87708619e1fad01348904dc6e1167fc91b989e7d4af34e19ba89d",
                                                        "typeString": "literal_string \"ASSET\""
                                                    },
                                                    "value": "ASSET"
                                                },
                                                {
                                                    "hexValue": "30",
                                                    "id": 461,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6456:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_97fc46276c172633607a331542609db1e3da793fca183d594ed5a61803a10792",
                                                        "typeString": "literal_string \"string\""
                                                    },
                                                    {
                                                        "typeIdentifier": "t_stringliteral_e15c4f51c2d87708619e1fad01348904dc6e1167fc91b989e7d4af34e19ba89d",
                                                        "typeString": "literal_string \"ASSET\""
                                                    },
                                                    {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    }
                                                ],
                                                "id": 458,
                                                "name": "LabelVariable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 547,
                                                "src": "6423:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_LabelVariable_$547_storage_ptr_$",
                                                    "typeString": "type(struct LabelVariable storage pointer)"
                                                }
                                            },
                                            "id": 462,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6423:35:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelVariable_$547_memory_ptr",
                                                "typeString": "struct LabelVariable memory"
                                            }
                                        },
                                        "src": "6408:50:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelVariable_$547_memory_ptr",
                                            "typeString": "struct LabelVariable memory"
                                        }
                                    },
                                    "id": 464,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6408:50:0"
                                },
                                {
                                    "expression": {
                                        "id": 480,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 465,
                                                "name": "variables",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 453,
                                                "src": "6464:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_LabelVariable_$547_memory_ptr_$dyn_memory_ptr",
                                                    "typeString": "struct LabelVariable memory[] memory"
                                                }
                                            },
                                            "id": 467,
                                            "indexExpression": {
                                                "hexValue": "31",
                                                "id": 466,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6474:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "6464:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelVariable_$547_memory_ptr",
                                                "typeString": "struct LabelVariable memory"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "75736463",
                                                    "id": 469,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6493:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_1773e1ddf200efb0fafc1e372028aa623f95d2de00ee1f4be9d606ee8c89d5fb",
                                                        "typeString": "literal_string \"usdc\""
                                                    },
                                                    "value": "usdc"
                                                },
                                                {
                                                    "hexValue": "56414c5545",
                                                    "id": 470,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6501:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_2283f2267d4f9a11645e40e4a3da38ef100035c4e42538355934b9ac46ed3673",
                                                        "typeString": "literal_string \"VALUE\""
                                                    },
                                                    "value": "VALUE"
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "expression": {
                                                                        "id": 475,
                                                                        "name": "future",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 438,
                                                                        "src": "6525:6:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_Future_$28_storage_ptr",
                                                                            "typeString": "struct Future storage pointer"
                                                                        }
                                                                    },
                                                                    "id": 476,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "6532:5:0",
                                                                    "memberName": "value",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 25,
                                                                    "src": "6525:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint80",
                                                                        "typeString": "uint80"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_uint80",
                                                                        "typeString": "uint80"
                                                                    }
                                                                ],
                                                                "id": 474,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "6517:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                                    "typeString": "type(uint256)"
                                                                },
                                                                "typeName": {
                                                                    "id": 473,
                                                                    "name": "uint256",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "6517:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 477,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "6517:21:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 472,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "6510:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_int256_$",
                                                            "typeString": "type(int256)"
                                                        },
                                                        "typeName": {
                                                            "id": 471,
                                                            "name": "int256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "6510:6:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 478,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "6510:29:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_1773e1ddf200efb0fafc1e372028aa623f95d2de00ee1f4be9d606ee8c89d5fb",
                                                        "typeString": "literal_string \"usdc\""
                                                    },
                                                    {
                                                        "typeIdentifier": "t_stringliteral_2283f2267d4f9a11645e40e4a3da38ef100035c4e42538355934b9ac46ed3673",
                                                        "typeString": "literal_string \"VALUE\""
                                                    },
                                                    {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                ],
                                                "id": 468,
                                                "name": "LabelVariable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 547,
                                                "src": "6479:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_LabelVariable_$547_storage_ptr_$",
                                                    "typeString": "type(struct LabelVariable storage pointer)"
                                                }
                                            },
                                            "id": 479,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6479:61:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelVariable_$547_memory_ptr",
                                                "typeString": "struct LabelVariable memory"
                                            }
                                        },
                                        "src": "6464:76:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelVariable_$547_memory_ptr",
                                            "typeString": "struct LabelVariable memory"
                                        }
                                    },
                                    "id": 481,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6464:76:0"
                                },
                                {
                                    "expression": {
                                        "id": 482,
                                        "name": "variables",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 453,
                                        "src": "6554:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_LabelVariable_$547_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct LabelVariable memory[] memory"
                                        }
                                    },
                                    "functionReturnParameters": 435,
                                    "id": 483,
                                    "nodeType": "Return",
                                    "src": "6547:16:0"
                                }
                            ]
                        },
                        "functionSelector": "c6ebd392",
                        "id": 485,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getMarketEventNameVariables",
                        "nameLocation": "6166:27:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 430,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 429,
                                    "mutability": "mutable",
                                    "name": "marketEventId",
                                    "nameLocation": "6201:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 485,
                                    "src": "6194:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                    },
                                    "typeName": {
                                        "id": 428,
                                        "name": "uint80",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6194:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint80",
                                            "typeString": "uint80"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6193:22:0"
                        },
                        "returnParameters": {
                            "id": 435,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 434,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 485,
                                    "src": "6237:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_LabelVariable_$547_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct LabelVariable[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 432,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 431,
                                                "name": "LabelVariable",
                                                "nameLocations": [
                                                    "6237:13:0"
                                                ],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 547,
                                                "src": "6237:13:0"
                                            },
                                            "referencedDeclaration": 547,
                                            "src": "6237:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelVariable_$547_storage_ptr",
                                                "typeString": "struct LabelVariable"
                                            }
                                        },
                                        "id": 433,
                                        "nodeType": "ArrayTypeName",
                                        "src": "6237:15:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_LabelVariable_$547_storage_$dyn_storage_ptr",
                                            "typeString": "struct LabelVariable[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6236:24:0"
                        },
                        "scope": 506,
                        "src": "6157:411:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 504,
                            "nodeType": "Block",
                            "src": "6659:108:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 496,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 494,
                                            "name": "consumerAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 98,
                                            "src": "6665:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 495,
                                            "name": "initialConsumerAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 487,
                                            "src": "6683:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "6665:40:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 497,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6665:40:0"
                                },
                                {
                                    "expression": {
                                        "id": 502,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 498,
                                            "name": "consumer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 101,
                                            "src": "6711:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IFuturesConsumer_$532",
                                                "typeString": "contract IFuturesConsumer"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 500,
                                                    "name": "initialConsumerAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 487,
                                                    "src": "6739:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 499,
                                                "name": "IFuturesConsumer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 532,
                                                "src": "6722:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IFuturesConsumer_$532_$",
                                                    "typeString": "type(contract IFuturesConsumer)"
                                                }
                                            },
                                            "id": 501,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6722:40:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IFuturesConsumer_$532",
                                                "typeString": "contract IFuturesConsumer"
                                            }
                                        },
                                        "src": "6711:51:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IFuturesConsumer_$532",
                                            "typeString": "contract IFuturesConsumer"
                                        }
                                    },
                                    "id": 503,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6711:51:0"
                                }
                            ]
                        },
                        "id": 505,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "expression": {
                                            "id": 490,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "6647:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 491,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6651:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "6647:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 492,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 489,
                                    "name": "ConfirmedOwner",
                                    "nameLocations": [
                                        "6632:14:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1396,
                                    "src": "6632:14:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "6632:26:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 488,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 487,
                                    "mutability": "mutable",
                                    "name": "initialConsumerAddress",
                                    "nameLocation": "6608:22:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 505,
                                    "src": "6600:30:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 486,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6600:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6599:32:0"
                        },
                        "returnParameters": {
                            "id": 493,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "6659:0:0"
                        },
                        "scope": 506,
                        "src": "6588:179:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 507,
                "src": "1129:5640:0",
                "usedErrors": [],
                "usedEvents": [
                    1413,
                    1419
                ]
            }
        ],
        "src": "39:6730:0"
    },
    "functionHashes": {
        "acceptOwnership()": "79ba5097",
        "addSupportedAsset(string,address)": "e056de27",
        "chainlinkPriceOracles(string)": "3c0b9ec1",
        "consumerAddress()": "dbc2d042",
        "createMarketEvent(string,uint8,uint80,uint64,uint80,bool)": "3e18f960",
        "getLabel()": "9554c124",
        "getMarketEventName(uint80)": "af33a17b",
        "getMarketEventNameVariables(uint80)": "c6ebd392",
        "getSupportedAssets()": "e5406dbf",
        "getSupportedMetrics()": "236126b2",
        "owner()": "8da5cb5b",
        "resolveMarketEvent(uint80,uint80)": "6f685e75",
        "supportedAssets(uint256)": "c68dbb37",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1298200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "acceptOwnership()": "52342",
            "addSupportedAsset(string,address)": "infinite",
            "chainlinkPriceOracles(string)": "infinite",
            "consumerAddress()": "2358",
            "createMarketEvent(string,uint8,uint80,uint64,uint80,bool)": "infinite",
            "getLabel()": "infinite",
            "getMarketEventName(uint80)": "infinite",
            "getMarketEventNameVariables(uint80)": "infinite",
            "getSupportedAssets()": "infinite",
            "getSupportedMetrics()": "infinite",
            "owner()": "2396",
            "resolveMarketEvent(uint80,uint80)": "infinite",
            "supportedAssets(uint256)": "infinite",
            "transferOwnership(address)": "30520"
        },
        "internal": {
            "getRoundPrice(uint80,uint80,contract AggregatorV3Interface)": "infinite"
        }
    }
}